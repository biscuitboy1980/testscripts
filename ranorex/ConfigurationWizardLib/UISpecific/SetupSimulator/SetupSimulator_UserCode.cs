///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;
using System.IO;
using System.Diagnostics;

using CommonUtilLib;
using Ranorex;
using Ranorex.Core;

namespace ConfigurationWizardLib.UISpecific.SetupSimulator
{
	/// <summary>
	/// The Setup recording.
	/// </summary>
	public partial class SetupSimulator
	{
			
			
	    //*************************************************************************************//
		//**********Copies and overwrites config files if necessarys***************************//
		//*************************************************************************************//
		
		public void CopyConfigFiles()
		{		
		
		string fileName1 = "SIM.xml";
        string sourcePath = "DataFiles";
        string targetPath =  @"C:\Documents and Settings\All Users\Documents\Ultra Electronics Inc\Config Wizard";

        // Use Path class to manipulate file and directory paths.
        string sourceFile1 = System.IO.Path.Combine(sourcePath, fileName1);
        string destFile1 = System.IO.Path.Combine(targetPath, fileName1);
        
        // To copy a folder's contents to a new location:
        // Create a new target folder, if necessary.
        if (!System.IO.Directory.Exists(targetPath))
        {
            System.IO.Directory.CreateDirectory(targetPath);
        }

        // To copy a file to another location and 
        // overwrite the destination file if it already exists.
        System.IO.File.Copy(sourceFile1, destFile1, true);	
		}
		
	    //**************************************************************************************//
		//********************************Populates SIM IP Address***************************//
		//**************************************************************************************//
		
		public void SimulatorIP()
		{
			if (SIMip == "999.999.999.999")
			{
				Report.Info("Key sequence " + SIMip);
				string[] output = SIMip.Split('.');
				string w = output[0].ToString();
				string x = output[1].ToString();
				string y = output[2].ToString();
				string z = output[3].ToString();
				string a = w.PadLeft(3,'0');
				string b = x.PadLeft(3,'0');
				string c = y.PadLeft(3,'0');
				string d = z.PadLeft(3,'0');
				Keyboard.Press(a);
				Keyboard.Press(b);
				Keyboard.Press(c);
				Keyboard.Press(d);
			}
			else
			{
				Report.Info("Key sequence " + SIMip);
				string[] output = SIMip.Split('.');
				string w = output[0].ToString();
				string x = output[1].ToString();
				string y = output[2].ToString();
				string z = output[3].ToString();
				string a = w.PadLeft(3,'0');
				string b = x.PadLeft(3,'0');
				string c = y.PadLeft(3,'0');
				string d = z.PadLeft(3,'0');
				Keyboard.Press(a);
				Keyboard.Press(b);
				Keyboard.Press(c);
				Keyboard.Press(d);
			}
		}		
		


		public void LaunchCfgWiz()
		{
			    CommonUtilLib.Util SharedFunctions = new CommonUtilLib.Util();
				Report.Info("Launching Configuration Wizard");
				int OSBit = SharedFunctions.OSBit();
				
				if (OSBit == 32)
					{
						Process CfgWiz = new Process();
						CfgWiz.StartInfo.FileName = @"C:\Program Files\Ultra Electronics Inc\ADSI\current\bin\cfgwizard.exe";
						CfgWiz.Start();
					}
					else
					{
						Process CfgWiz = new Process();
						CfgWiz.StartInfo.FileName = @"C:\Program Files (x86)\Ultra Electronics Inc\ADSI\current\bin\cfgwizard.exe";
						CfgWiz.Start();
					}
		}
		
		
		public void Maximize()
		{
			
			Duration OrigDur1 = repo.FormConfiguration_Wizard.ButtonMaximizeInfo.SearchTimeout;
			repo.FormConfiguration_Wizard.ButtonMaximizeInfo.SearchTimeout = 3000;
			
			if (repo.FormConfiguration_Wizard.ButtonMaximizeInfo.Exists())
				{
				//Your code here. Code inside this method will not be changed by the code generator.
				Report.Info("Mouse Left Click item 'FormConfiguration_Wizard.ButtonMaximize' at 22;11.");
				repo.FormConfiguration_Wizard.ButtonMaximize.Click();
				}
			
			repo.FormConfiguration_Wizard.ButtonMaximizeInfo.SearchTimeout = OrigDur1;	
		}

		public void CloseExist()
			
		{
			Duration OrigDur1 = repo.ButtonCloseInfo.SearchTimeout;
			repo.ButtonCloseInfo.SearchTimeout = 3000;
			
			Report.Info("Checking to see if 'FormConfiguration_Wizard.ButtonClose' Exists");
			
			if (repo.ButtonCloseInfo.Exists())
				{
				Report.Info("Mouse Left Click item 'ButtonClose' at Center.");
				repo.ButtonClose.Click();
				}
			
			repo.ButtonCloseInfo.SearchTimeout = OrigDur1;
		}
		
		public void KillUltraProcesses()
		{
			CommonUtilLib.Util SharedFunctions = new CommonUtilLib.Util();
			SharedFunctions.KillUltraProcesses();
		}

		static SetupSimulator()
		{
			//Your recording specific initialization code goes here.
		}

		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void DeleteSMConfig()
		{
			// Your code goes here. Code inside this method will not be changed by the code generator.
			
		}

	}
}
