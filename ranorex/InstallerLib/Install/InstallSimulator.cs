///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace InstallerLib.Install
{
    /// <summary>
    /// The InstallSimulator recording.
    /// </summary>
    [TestModule("f4273f0f-e53f-46fc-ad81-0d5f1784e737", ModuleType.Recording, 1)]
    public partial class InstallSimulator : ITestModule
    {
        /// <summary>
        /// Holds an instance of the InstallerLib.InstallHudsonRepository repository.
        /// </summary>
        public static InstallerLib.InstallHudsonRepository repo = InstallerLib.InstallHudsonRepository.Instance;

        static InstallSimulator instance = new InstallSimulator();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InstallSimulator()
        {
            SIMip = "";
            SIMuser = "";
            SIMpass = "";
            buildtype = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InstallSimulator Instance
        {
            get { return instance; }
        }

#region Variables

        string _SIMip;

        /// <summary>
        /// Gets or sets the value of variable SIMip.
        /// </summary>
        [TestVariable("e4e124fd-4d81-48bd-a08c-bf08d1930e45")]
        public string SIMip
        {
            get { return _SIMip; }
            set { _SIMip = value; }
        }

        string _SIMuser;

        /// <summary>
        /// Gets or sets the value of variable SIMuser.
        /// </summary>
        [TestVariable("a4a1d58e-4a99-45ac-8572-b3cbece4f03c")]
        public string SIMuser
        {
            get { return _SIMuser; }
            set { _SIMuser = value; }
        }

        string _SIMpass;

        /// <summary>
        /// Gets or sets the value of variable SIMpass.
        /// </summary>
        [TestVariable("22b72d40-f2f4-44fb-98c6-32077fd6bece")]
        public string SIMpass
        {
            get { return _SIMpass; }
            set { _SIMpass = value; }
        }

        string _buildtype;

        /// <summary>
        /// Gets or sets the value of variable buildtype.
        /// </summary>
        [TestVariable("00d2f48f-56d6-4360-8e76-b5b7a0fcd171")]
        public string buildtype
        {
            get { return _buildtype; }
            set { _buildtype = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 250;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            GetCurrentDirectory();
            Delay.Milliseconds(0);
            
            GetRevision();
            Delay.Milliseconds(0);
            
            CreateDirs();
            Delay.Milliseconds(0);
            
            CompareSVN();
            Delay.Milliseconds(0);
            
            Is64BitSystem();
            Delay.Milliseconds(0);
            
            Check7zip();
            Delay.Milliseconds(0);
            
            PingLinux();
            Delay.Milliseconds(0);
            
            InstallLinux();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
}
