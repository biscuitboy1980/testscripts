///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TrainingLib.SanDiego
{
    /// <summary>
    /// The Test01 recording.
    /// </summary>
    [TestModule("e4f5dc7e-bb0d-46e6-bb3a-7a1864b4d39d", ModuleType.Recording, 1)]
    public partial class Test01 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TrainingLib.TrainingLibRepository repository.
        /// </summary>
        public static TrainingLib.TrainingLibRepository repo = TrainingLib.TrainingLibRepository.Instance;

        static Test01 instance = new Test01();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Test01()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Test01 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 250;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            GetTrackCount();
            Delay.Milliseconds(150);
            
            RandCoord();
            Delay.Milliseconds(150);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRealView.MenuItemCreate_Track' at Center.", repo.FormRealView.MenuItemCreate_TrackInfo, new RecordItemIndex(2));
            repo.FormRealView.MenuItemCreate_Track.Click(150);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormCreate_Track.MenuItemAir' at Center.", repo.FormCreate_Track.MenuItemAirInfo, new RecordItemIndex(3));
            repo.FormCreate_Track.MenuItemAir.Click(150);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Air_TN___CREATING.ListItemVelocity__mph_' at CenterLeft.", repo.FormMain__Air_TN___CREATING.ListItemVelocity__mph_Info, new RecordItemIndex(4));
            repo.FormMain__Air_TN___CREATING.ListItemVelocity__mph_.Click(Location.CenterLeft, 150);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, 15, Keyboard.DefaultKeyPressTime, 1, false);
            Delay.Milliseconds(50);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '350'.", new RecordItemIndex(6));
            Keyboard.Press("350");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Air_TN___CREATING.ButtonSave' at Center.", repo.FormMain__Air_TN___CREATING.ButtonSaveInfo, new RecordItemIndex(7));
            repo.FormMain__Air_TN___CREATING.ButtonSave.Click(150);
            Delay.Milliseconds(0);
            
            GetTrackNum();
            Delay.Milliseconds(150);
            
            CreateTrackRepoItems();
            Delay.Milliseconds(150);
            
            RightClickTrack();
            Delay.Milliseconds(150);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRealView.MenuItemTrack_Properties' at Center.", repo.FormRealView.MenuItemTrack_PropertiesInfo, new RecordItemIndex(11));
            repo.FormRealView.MenuItemTrack_Properties.Click(150);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Velocity (mph)') on item 'FormMain__Air_TN.ListItemVelocity__mph_'.", repo.FormMain__Air_TN.ListItemVelocity__mph_Info, new RecordItemIndex(12));
            Validate.Attribute(repo.FormMain__Air_TN.ListItemVelocity__mph_Info, "Text", "Velocity (mph)");
            Delay.Milliseconds(150);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleValue='350') on item 'FormMain__Air_TN.ListItemVelocity__mph_'.", repo.FormMain__Air_TN.ListItemVelocity__mph_Info, new RecordItemIndex(13));
            Validate.Attribute(repo.FormMain__Air_TN.ListItemVelocity__mph_Info, "AccessibleValue", "350");
            Delay.Milliseconds(150);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Air_TN.ButtonCLOSE' at Center.", repo.FormMain__Air_TN.ButtonCLOSEInfo, new RecordItemIndex(14));
            repo.FormMain__Air_TN.ButtonCLOSE.Click(150);
            Delay.Milliseconds(0);
            
            RightClickTrack();
            Delay.Milliseconds(0);
            
            DropTrack();
            Delay.Milliseconds(0);
            
            Validate_DropTrack();
            Delay.Milliseconds(0);
            
            ResetPaths();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
}
