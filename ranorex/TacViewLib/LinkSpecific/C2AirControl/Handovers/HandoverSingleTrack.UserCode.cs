///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;

namespace TacViewLib.LinkSpecific.C2AirControl.Handovers
{
	/// <summary>
	/// The HandoverSingleTrack recording.
	/// </summary>
	public partial class HandoverSingleTrack
	{
		
		public static bool ZoomFlag = false;		
		public static string TrackNum;
		public static string CU;
		public static string unit1;
		public static string unit2;
		
		
		public void CreateTrackRepoItems()
		{			
			string currentPath = repo.FormTacViewC2.PictureTrackInfo.Path.ToString();
			repo.FormTacViewC2.PictureTrackInfo.Path = currentPath.Replace("%track%", TrackNum);
			Report.Info("Setting repo item FormTacViewC2.PictureTrack to " + repo.FormTacViewC2.PictureTrackInfo.Path.ToString());
			
			string currentPath1 = repo.FormTracks.MenuItemConnection2_TrackInfo.Path.ToString();
			repo.FormTracks.MenuItemConnection2_TrackInfo.Path = currentPath1.Replace("%track%", TrackNum);
			Report.Info("Setting repo item FormTracks.MenuItemC2_HOST_2_Track to " + repo.FormTracks.MenuItemConnection2_TrackInfo.Path.ToString());
			
			string currentPath2 = repo.FormRealView.MenuItemTrackNumber2Info.Path.ToString();
			repo.FormRealView.MenuItemTrackNumber2Info.Path = currentPath2.Replace("%track%", TrackNum);
			Report.Info("Setting repo item FormRealView.MenuItemTrackNumber2 to " + repo.FormRealView.MenuItemTrackNumber2Info.Path.ToString());
			
			string currentPath3 = repo.FormRealView.MenuItemTrackNumberInfo.Path.ToString();
			repo.FormRealView.MenuItemTrackNumberInfo.Path = currentPath3.Replace("%track%", TrackNum);
			Report.Info("Setting repo item FormRealView.MenuItemTrackNumber to " + repo.FormRealView.MenuItemTrackNumberInfo.Path.ToString());
			
			string currentPath4 = repo.FormTracks.MenuItemConnection1_TrackInfo.Path.ToString();
			repo.FormTracks.MenuItemConnection1_TrackInfo.Path = currentPath4.Replace("%track%", TrackNum);
			Report.Info("Setting repo item FormTracks.MenuItemC2_HOST_Track to " + repo.FormTracks.MenuItemConnection1_TrackInfo.Path.ToString());			
		}
		
		//************************************************************************************//
		//************************************************************************************//
		//************************************************************************************//		
		
		public void RightClickTrack()
		{			
			Duration OrigDur = repo.FormTacViewC2.PictureTrackInfo.SearchTimeout;
			repo.FormTacViewC2.PictureTrackInfo.SearchTimeout = 2000;			
			
			if (repo.FormTacViewC2.PictureTrackInfo.Exists())
			{
				Report.Info("Mouse Right Click item 'FormTacViewC2.PictureTrack' at Center.");
				repo.FormTacViewC2.PictureTrack.Click(MouseButtons.Right);
			}
			else
			{
				ZoomFlag = true;
				Report.Info("Track # " + TrackNum + " not found on the current display, going to world wide view");
				repo.FormTacViewC2.ButtonZoom_Out_Max.Click();
				
				if (repo.FormTacViewC2.PictureTrackInfo.Exists())
				{
					Report.Info("Mouse Right Click item 'FormTacViewC2.PictureTrack' at Center.");
					repo.FormTacViewC2.PictureTrack.Click(MouseButtons.Right);
				}
				else
				{
					Report.Error("Unable to find Track # " + TrackNum + " anywhere in the world");
					return;
				}				
			}
			
			repo.FormTacViewC2.PictureTrackInfo.SearchTimeout = OrigDur;
		}

		//************************************************************************************//
		//**********Opens Track Dialog For Corresponding Track on C2 Host Interface*********//
		//************************************************************************************//
		
		public void ViewTrackPropertiesC2Host()
		{			
			Duration OrigDur = repo.FormRealView.MenuItemTracksInfo.SearchTimeout;
			repo.FormRealView.MenuItemTracksInfo.SearchTimeout = 1000;
			Duration OrigDur1 = repo.FormRealView.MenuItemTrackNumber2Info.SearchTimeout;
			repo.FormRealView.MenuItemTrackNumber2Info.SearchTimeout = 1000;			
			
			if (repo.FormRealView.MenuItemTracksInfo.Exists())
			{
				Report.Info("Mouse Left Click item 'FormRealView.MenuItemTracks'");
			    repo.FormRealView.MenuItemTracks.Click();
			    Report.Info("Mouse Left Click item 'FormTracks.MenuItemC2_HOST_Track'");
		        repo.FormTracks.MenuItemConnection2_Track.Click();
		       	Report.Info("Mouse Left Click item 'FormTOAD2.MenuItemTrack_Properties' at 103;14.");
				repo.FormConnection2.MenuItemTrack_Properties.Click();
			}			
			else if (repo.FormRealView.MenuItemTrackNumber2Info.Exists())
			{
			    Report.Info("Mouse Left Click item 'repo.FormRealView.MenuItemTrackNumber2'");
		        repo.FormRealView.MenuItemTrackNumber2.Click();
		       	Report.Info("Mouse Left Click item 'FormTOAD.MenuItemTrack_Properties' at 103;14.");
				repo.FormConnection2.MenuItemTrack_Properties.Click();
			}
			
			repo.FormRealView.MenuItemTracksInfo.SearchTimeout = OrigDur;
			repo.FormRealView.MenuItemTrackNumber2Info.SearchTimeout = OrigDur1;
		}
		
		//************************************************************************************//
		//**********Opens Track Dialog For Corresponding Track on C2 Host 2 Interface*********//
		//************************************************************************************//
		
		public void ViewTrackPropertiesC2Host2()
		{			
			Duration OrigDur = repo.FormRealView.MenuItemTracksInfo.SearchTimeout;
			repo.FormRealView.MenuItemTracksInfo.SearchTimeout = 1000;
			Duration OrigDur1 = repo.FormRealView.MenuItemTrackNumber2Info.SearchTimeout;
			repo.FormRealView.MenuItemTrackNumber2Info.SearchTimeout = 1000;			
			
			if (repo.FormRealView.MenuItemTracksInfo.Exists())
			{
				Report.Info("Mouse Left Click item 'FormRealView.MenuItemTracks'");
			    repo.FormRealView.MenuItemTracks.Click();
			    Report.Info("Mouse Left Click item 'FormTracks.MenuItemC2_HOST_2_Track'");
		        repo.FormTracks.MenuItemConnection2_Track.Click();
		       	Report.Info("Mouse Left Click item 'FormTOAD2.MenuItemTrack_Properties' at 103;14.");
				repo.FormConnection2.MenuItemTrack_Properties.Click();
			}			
			else if (repo.FormRealView.MenuItemTrackNumber2Info.Exists())
			{
			    Report.Info("Mouse Left Click item 'repo.FormRealView.MenuItemTrackNumber2'");
		        repo.FormRealView.MenuItemTrackNumber2.Click();
		       	Report.Info("Mouse Left Click item 'FormTOAD2.MenuItemTrack_Properties' at 103;14.");
				repo.FormConnection2.MenuItemTrack_Properties.Click();
			}
			
			repo.FormRealView.MenuItemTracksInfo.SearchTimeout = OrigDur;
			repo.FormRealView.MenuItemTrackNumber2Info.SearchTimeout = OrigDur1;
		}

		static HandoverSingleTrack()
		{
			//Your recording specific initialization code goes here.
		}

		public void Validate_CU()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Validating Controlling unit = " + CU + " on track # " + TrackNum);
			Validate.Attribute(repo.FormMainCreate.ListItemControlling_UnitInfo, "AccessibleValue", CU);
		}

		public void EnterUnit1()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Key 'Tab' Press.");
			Keyboard.Press(Keys.Tab);
			Report.Info("Entering Unit 2's JU of " + unit1);
			Keyboard.Press(unit1);
			Report.Info("Key 'Tab' Press.");
			Keyboard.Press(Keys.Tab);
		}
		
		public void EnterUnit2()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Key 'Tab' Press.");
			Keyboard.Press(Keys.Tab);
			Report.Info("Entering Unit 2's JU of " + unit2);
			Keyboard.Press(unit2);
			Report.Info("Key 'Tab' Press.");
			Keyboard.Press(Keys.Tab);
		}

		public void GetUnitNumbers()
			
		{
	    Accessible a = @"/form[@title~'^TacViewC2\ \ \ \(map:\ .*']/element/container/element/table/row[@accessiblename='0']/cell[@accessiblename='Unit']";
   	    Accessible accElement1 = new Accessible(a);  
   	    unit1 = accElement1.Value;
   		
   	    Accessible b = @"/form[@title~'^TacViewC2\ \ \ \(map:\ .*']/element/container/element/table/row[@accessiblename='1']/cell[@accessiblename='Unit']";
   	    Accessible accElement2 = new Accessible(b);  
 		unit2 = accElement2.Value;
   		
		}


		public void SetUnit1CU()
		{
		CU = unit1;
		}

		public void SetUnit2CU()
		{
		CU = unit2;
		}

		private void Init()
		{
			// Your recording specific initialization code goes here.
		}
		
	}
}
