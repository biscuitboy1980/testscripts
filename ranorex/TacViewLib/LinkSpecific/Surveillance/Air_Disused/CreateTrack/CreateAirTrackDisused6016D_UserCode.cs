///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;

namespace TacViewLib.LinkSpecific.Surveillance.Air_Disused.CreateTrack
{
	/// <summary>
	/// The CreateTrack recording.
	/// </summary>
	
		//************************************************************************************//
		//**************Default values to enter for track if csv file not present*************//
		//************************************************************************************//
	
	public partial class CreateAirTrackDisused6016D
	{
		public static string ID;
		
		//************************************************************************************//
		//********************Gets Identity value from csv file*******************************//
		//************************************************************************************//
		
		public void IDval()
		{
			repo.FormMain__Air_TN___CREATING.ListItemIdentity.Click("CenterLeft");
		    Keyboard.Press(Keys.Tab);
		    Keyboard.Press("{LMenu down}{Down}{LMenu up}");
			Ranorex.List list2 = "//list[@processname='RealView']";
            int AScount = list2.Items.Count;
            Random ASvalue = new Random();
			int ASnum = ASvalue.Next(0, AScount);
       		repo.ListRealView.Self.Items[ASnum].Select();
       		repo.ListRealView.Self.Items[ASnum].Click();
			Accessible accElement = new Accessible(repo.FormMain__Air_TN___CREATING.ListItemIdentity);  
   			string IDValue = accElement.Value;
   			ValidateTrack.ValidateAirTrackDisused6016D.ID = IDValue;
		}
		
		//************************************************************************************//
		//********************Gets Platform value from csv file*******************************//
		//************************************************************************************//
		
		public void Platval()
		{
			Keyboard.Press("{LMenu down}{Down}{LMenu up}");
			bool found = false;
			ValidateTrack.ValidateAirTrackDisused6016D.PlatFlag=false;
        	foreach( ListItem item in repo.ListRealView.Self.Items )
        	{
           		if ( item.Text == Plat )
           		{
            	item.Select();
            	item.Click();
            	found=true;
            	break;        
           		}           		
        	}
        	if (!found)
        	{
        	ValidateTrack.ValidateAirTrackDisused6016D.PlatFlag=true;
           	repo.ListRealView.Self.Items[1].Select();
       		repo.ListRealView.Self.Items[1].Click();;
        	}   
		}
		//************************************************************************************//
		//********************Gets Activity value from csv file*******************************//
		//************************************************************************************//
		
		public void Actval()
		{
			Keyboard.Press("{LMenu down}{Down}{LMenu up}");
			bool found = false;
        	foreach( ListItem item in repo.ListRealView.Self.Items )
        	{
           		if ( item.Text == Act )
           		{
            	item.Select();
            	item.Click();
            	found=true;
            	break;        
           		}           		
        	}
        	if (!found)
        	{
        	ValidateTrack.ValidateAirTrackDisused6016D.ActFlag=true;
	      	repo.ListRealView.Self.Items[1].Select();
       		repo.ListRealView.Self.Items[1].Click();
        	}   
		}

		//************************************************************************************//
		//********************Gets Specific Type value from csv file**************************//
		//************************************************************************************//
		
		public void Stypeval()
		{
			Keyboard.Press("{LMenu down}{Down}{LMenu up}");
			bool found = false;
			ValidateTrack.ValidateAirTrackDisused6016D.StypeFlag=false;
        	foreach( ListItem item in repo.ListRealView.Self.Items )
        	{
           		if ( item.Text == Stype )
           		{
            	item.Select();
            	item.Click();
            	found=true;
            	break;        
           		}           		
        	}
        	if (!found)
        	{
        	ValidateTrack.ValidateAirTrackDisused6016D.StypeFlag=true;
          	repo.ListRealView.Self.Items[1].Select();
       		repo.ListRealView.Self.Items[1].Click();
        	}   
		}

		//************************************************************************************//
		//********************Validates previous track was dropped****************************//
		//************************************************************************************//
		
		public void ValidateDropTrack()
		{
		Delay.Milliseconds(1500, false);
		if (repo.FormTacViewC2.PictureTrackCreateDropInfo.Exists())
			{
				TacViewLib.LinkSpecific.Surveillance.Drop_Track.DropTrack.Start();
			}
		}

		static CreateAirTrackDisused6016D()
		{
			//Your recording specific initialization code goes here.
		}

		private void Init()
		{
			// Your recording specific initialization code goes here.
		}
	}
}