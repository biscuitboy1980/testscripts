///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;

namespace TacViewLib.LinkSpecific.Surveillance.Air.CreateTrack
{
	/// <summary>
	/// The CreateTrack recording.
	/// </summary>
	
	
		//************************************************************************************//
		//**************Default values to enter for track if csv file not present*************//
		//************************************************************************************//
	
	public partial class CreateNoStatementTOAD1
	{
		public static string ID = "Hostile";
		public static string Plat = "Bomber";
		public static string Act = "Escorting";
		public static string Stype = "F-15 EAGLE";
		
        
		//************************************************************************************//
		//********************Gets Identity value from csv file*******************************//
		//************************************************************************************//
		
		public static void IDval()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Key sequence 'ID'.");
			Keyboard.Press(ID);
		}
		
		//************************************************************************************//
		//********************Gets Platform value from csv file*******************************//
		//************************************************************************************//
		
		public static void Platval()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Key sequence 'Plat'.");
			Keyboard.Press(Plat);
		}

		//************************************************************************************//
		//********************Gets Activity value from csv file*******************************//
		//************************************************************************************//
		
		public static void Actval()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Key sequence 'Act'.");
			Keyboard.Press(Act);
		}

		//************************************************************************************//
		//********************Gets Specific Type value from csv file**************************//
		//************************************************************************************//
		
		public static void Stypeval()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Key sequence 'Stype'.");
			Keyboard.Press(Stype);
		}
		
		//************************************************************************************//
		//********************Validates the created track is dropped**************************//
		//************************************************************************************//
		
		public static void ValidateDropTrack()
		{
			if (repo.FormTacViewC2____map__Pacifi1.PictureDropTrack1Info.Exists())
			{
				Delay.Milliseconds(1000, false);
				
				if (repo.FormTacViewC2____map__Pacifi1.PictureDropTrack1Info.Exists())					
				{
				Report.Error("Previous track did not drop attempting to drop again");
				Keyboard.Press(Keys.Escape, 1, 100, 1, false);			
				Keyboard.Press(Keys.Escape, 1, 100, 1, false);
				Keyboard.Press(Keys.Escape, 1, 100, 1, false);
				Keyboard.Press(Keys.Escape, 1, 100, 1, false);
				repo.FormTacViewC2____map__Pacifi1.PictureTrack1.Click(MouseButtons.Right);
				
				if (repo.FormRealView1.MenuItemTOADForDropTrackInfo.Exists())
					{
					repo.FormRealView1.MenuItemTOAD.Click();
					repo.FormTOAD_TrackHash3012.MenuItemDrop_Track.Click();
					repo.FormRealView2.ButtonYes1.Click();
					Delay.Milliseconds(1000, false);
					}
				
					else 
						
//						(repo.FormRealView1.MenuItemDrop_Track1ForDropTrackInfo.Exists())
						{
						repo.FormRealView1.MenuItemDrop_Track1.Click();
						repo.FormRealView2.ButtonYes1.Click();
						Delay.Milliseconds(1000, false);
						}
				}
				
			}
				
//				else return;
//					
		}

		public static void Mouse_Click_File1()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Mouse Left Click item 'FormTacViewC2____map__Pacifi1.File' at 22;13.");
			repo.FormTacViewC2____map__Pacifi1.File.Click("22;13");
		}

		public static void Mouse_Click_MenuItemPreferences___1()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Mouse Left Click item 'FormIdle2.MenuItemPreferences___' at 76;401.");
			repo.FormIdle2.MenuItemPreferences___.Click("76;401");
		}

		public static void Mouse_Click_ButtonClose11()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Mouse Left Click item 'FormPreferences.ButtonClose1' at 55;14.");
			repo.FormPreferences.ButtonClose1.Click("55;14");
		}

	}
}
