///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.Surveillance.Reference_NoStatements.CreateTrack
{
    /// <summary>
    /// The CreateAmpNoStatementTOAD1 recording.
    /// </summary>
    [TestModule("a9d3df1d-ccf5-4278-88b0-c7f7b23668e1", ModuleType.Recording, 1)]
    public partial class CreateAmpNoStatementTOAD1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.TacViewLibRepository repository.
        /// </summary>
        public static TacViewLib.TacViewLibRepository repo = TacViewLib.TacViewLibRepository.Instance;

        static CreateAmpNoStatementTOAD1 instance = new CreateAmpNoStatementTOAD1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateAmpNoStatementTOAD1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateAmpNoStatementTOAD1 Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Connection1.
        /// </summary>
        [TestVariable("df43c705-3ac9-4eb2-89a2-19da9f82d8e5")]
        public string Connection1
        {
            get { return repo.Connection1; }
            set { repo.Connection1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable tracknumber.
        /// </summary>
        [TestVariable("a42b76a2-7ee5-4202-b178-a9f49bc79da2")]
        public string tracknumber
        {
            get { return repo.tracknumber; }
            set { repo.tracknumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 250;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            ValidateDropTrack();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FormTacViewC2.PictureTrack1' at 10;12.", repo.FormTacViewC2.PictureTrack1Info, new RecordItemIndex(1));
            repo.FormTacViewC2.PictureTrack1.Click(System.Windows.Forms.MouseButtons.Right, "10;12");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRealView.MenuItemConnection1' at Center.", repo.FormRealView.MenuItemConnection1Info, new RecordItemIndex(2));
            repo.FormRealView.MenuItemConnection1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormConnection1.MenuItemEdit_Track' at 86;14.", repo.FormConnection1.MenuItemEdit_TrackInfo, new RecordItemIndex(3));
            repo.FormConnection1.MenuItemEdit_Track.Click("86;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Reference_Point_TN.ListItemPoint_Type' at 32;7.", repo.FormMain__Reference_Point_TN.ListItemPoint_TypeInfo, new RecordItemIndex(4));
            repo.FormMain__Reference_Point_TN.ListItemPoint_Type.Click("32;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}{Tab}'.", new RecordItemIndex(5));
            Keyboard.Press("{Tab}{Tab}{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'N.S.{Tab}'.", new RecordItemIndex(6));
            Keyboard.Press("N.S.{Tab}", new Duration(0));
            Delay.Milliseconds(250);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Reference_Point_TN.ButtonSave' at 16;13.", repo.FormMain__Reference_Point_TN.ButtonSaveInfo, new RecordItemIndex(7));
            repo.FormMain__Reference_Point_TN.ButtonSave.Click("16;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Reference_Point_TN.ButtonCLOSE' at 12;13.", repo.FormMain__Reference_Point_TN.ButtonCLOSEInfo, new RecordItemIndex(8));
            repo.FormMain__Reference_Point_TN.ButtonCLOSE.Click("12;13");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
}
