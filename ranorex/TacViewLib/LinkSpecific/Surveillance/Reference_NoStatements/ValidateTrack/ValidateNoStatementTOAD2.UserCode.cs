///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;

namespace TacViewLib.LinkSpecific.Surveillance.Reference.ValidateTrack
{
	/// <summary>
	/// The ValidateTrack recording.
	/// </summary>
	public partial class ValidateNoStatementTOAD2
	{
		
		public static string Ptype = "Hazard";
		public static string Amp = "Missile Launch Point";
		public static string EnvCat = "Space";
		public static string ECAmp = "Nuclear Warhead";


		//*******************************************************************************************//
		//*********************Validates Point Type from csv file************************************//
	    //*******************************************************************************************//
		public static void ValidatePtype()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Validating AttributeEqual (AccessibleValue='Ptype') on item 'FormMain__Reference_Point_TN.ListItemPoint_Type'.");
			Report.Success(Ptype);
			Validate.Attribute(repo.FormMain__Reference_Point_TN.ListItemPoint_TypeInfo, "AccessibleValue", Ptype, Validate.DefaultMessage, false);
		}

		//*******************************************************************************************//
		//*********************Validates Amplification data from csv file****************************//
	    //*******************************************************************************************//
		
		public static void ValidateAmp()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Validating AttributeEqual (AccessibleValue='Amp') on item 'FormMain__Reference_Point_TN.ListItemAmplification'.");
			Report.Success(Amp);
			Validate.Attribute(repo.FormMain__Reference_Point_TN.ListItemAmplificationInfo, "AccessibleValue", Amp, Validate.DefaultMessage, false);
		}

		//*******************************************************************************************//
		//********************Validates Environment/Category from csv file***************************//
	    //*******************************************************************************************//
		
		public static void ValidateEnvironCat()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Validating AttributeEqual (AccessibleValue='EnvCat') on item 'FormMain__Reference_Point_TN.ListItemEnviron_Category'.");
			Report.Success(EnvCat);
			Validate.Attribute(repo.FormMain__Reference_Point_TN.ListItemEnviron_CategoryInfo, "AccessibleValue", EnvCat, Validate.DefaultMessage, false);
		}

		//*******************************************************************************************//
		//**************Validates Environment/Category Amplification data from csv file**************//
	    //*******************************************************************************************//
		
		public static void ValidateEnvironCatAmp()
		{
			//Your code here. Code inside this method will not be changed by the code generator.
			Report.Info("Validating AttributeEqual (AccessibleValue='ECAmp') on item 'FormMain__Reference_Point_TN.ListItemEnviron_Category_Amplifi'.");
			Report.Success(ECAmp);			
			Validate.Attribute(repo.FormMain__Reference_Point_TN.ListItemEnviron_Category_AmplifiInfo, "AccessibleValue", ECAmp, Validate.DefaultMessage, false);
		}
		static ValidateNoStatementTOAD2()
		{
			//Your recording specific initialization code goes here.
		}

	}
}
