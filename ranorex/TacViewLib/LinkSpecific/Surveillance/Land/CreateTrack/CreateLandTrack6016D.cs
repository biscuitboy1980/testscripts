///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.Surveillance.Land.CreateTrack
{
    /// <summary>
    /// The CreateLandTrack6016D recording.
    /// </summary>
    [TestModule("9e1fef7a-4c78-4884-bd42-acda064be8fc", ModuleType.Recording, 1)]
    public partial class CreateLandTrack6016D : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.TacViewLibRepository repository.
        /// </summary>
        public static TacViewLib.TacViewLibRepository repo = TacViewLib.TacViewLibRepository.Instance;

        static CreateLandTrack6016D instance = new CreateLandTrack6016D();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateLandTrack6016D()
        {
            Plat = "Troop Concentration/Unit";
            Act = "Holding";
            Stype = "TOW";
            Connection2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateLandTrack6016D Instance
        {
            get { return instance; }
        }

#region Variables

        string _Plat;

        /// <summary>
        /// Gets or sets the value of variable Plat.
        /// </summary>
        [TestVariable("e37a5b22-fb82-410c-b8d5-76d2c80ea61d")]
        public string Plat
        {
            get { return _Plat; }
            set { _Plat = value; }
        }

        string _Act;

        /// <summary>
        /// Gets or sets the value of variable Act.
        /// </summary>
        [TestVariable("a2fc2c38-c22c-4c43-8bb2-27ab124cdc94")]
        public string Act
        {
            get { return _Act; }
            set { _Act = value; }
        }

        string _Stype;

        /// <summary>
        /// Gets or sets the value of variable Stype.
        /// </summary>
        [TestVariable("333daa4f-d71c-4cd8-bc6b-a6cb2c3833ad")]
        public string Stype
        {
            get { return _Stype; }
            set { _Stype = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection1.
        /// </summary>
        [TestVariable("df43c705-3ac9-4eb2-89a2-19da9f82d8e5")]
        public string Connection1
        {
            get { return repo.Connection1; }
            set { repo.Connection1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable tracknumber.
        /// </summary>
        [TestVariable("a42b76a2-7ee5-4202-b178-a9f49bc79da2")]
        public string tracknumber
        {
            get { return repo.tracknumber; }
            set { repo.tracknumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection2.
        /// </summary>
        [TestVariable("a0439a0c-1c4b-45d2-9392-c94ab90b28b1")]
        public string Connection2
        {
            get { return repo.Connection2; }
            set { repo.Connection2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 31;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 8.0;

            Init();

            GetTrackCount();
            Delay.Milliseconds(0);
            
            RandCoord();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRealView.MenuItemCreate_Track' at Center.", repo.FormRealView.MenuItemCreate_TrackInfo, new RecordItemIndex(2));
            repo.FormRealView.MenuItemCreate_Track.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormCreate_Track.MenuItemConnection1' at Center.", repo.FormCreate_Track.MenuItemConnection1Info, new RecordItemIndex(3));
            repo.FormCreate_Track.MenuItemConnection1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormConnection1.MenuItemLand_Point_Track' at Center.", repo.FormConnection1.MenuItemLand_Point_TrackInfo, new RecordItemIndex(4));
            repo.FormConnection1.MenuItemLand_Point_Track.Click();
            Delay.Milliseconds(0);
            
            Indval();
            Delay.Milliseconds(0);
            
            IDval();
            Delay.Milliseconds(0);
            
            Platval();
            Delay.Milliseconds(0);
            
            Actval();
            Delay.Milliseconds(0);
            
            Stypeval();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemBasic_Track_Info' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemBasic_Track_InfoInfo, new RecordItemIndex(10));
            repo.FormMain__Land_Point_Track_TN.ListItemBasic_Track_Info.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            HAEft_Random();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemPosition_and_Speed' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemPosition_and_SpeedInfo, new RecordItemIndex(12));
            repo.FormMain__Land_Point_Track_TN.ListItemPosition_and_Speed.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemPosition_Relative_To_Bull' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemPosition_Relative_To_BullInfo, new RecordItemIndex(13));
            repo.FormMain__Land_Point_Track_TN.ListItemPosition_Relative_To_Bull.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemInterface_Info' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemInterface_InfoInfo, new RecordItemIndex(14));
            repo.FormMain__Land_Point_Track_TN.ListItemInterface_Info.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemMode_Codes_Special_Codes' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemMode_Codes_Special_CodesInfo, new RecordItemIndex(15));
            repo.FormMain__Land_Point_Track_TN.ListItemMode_Codes_Special_Codes.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemIndicators' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemIndicatorsInfo, new RecordItemIndex(16));
            repo.FormMain__Land_Point_Track_TN.ListItemIndicators.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemLand_Info' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemLand_InfoInfo, new RecordItemIndex(17));
            repo.FormMain__Land_Point_Track_TN.ListItemLand_Info.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            CirSquareval();
            Delay.Milliseconds(0);
            
            AOPMajor();
            Delay.Milliseconds(0);
            
            AOPMinor();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Land_Point_Track_TN.ButtonSave' at Center.", repo.FormMain__Land_Point_Track_TN.ButtonSaveInfo, new RecordItemIndex(21));
            repo.FormMain__Land_Point_Track_TN.ButtonSave.Click();
            Delay.Milliseconds(0);
            
            GetTrackNum();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
}
