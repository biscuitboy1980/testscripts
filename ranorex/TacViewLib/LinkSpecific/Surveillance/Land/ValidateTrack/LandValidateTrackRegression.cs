///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.Surveillance.Land.ValidateTrack
{
    /// <summary>
    /// The LandValidateTrackRegression recording.
    /// </summary>
    [TestModule("50f6a393-b9d5-47fb-ac40-192f76f2f8c8", ModuleType.Recording, 1)]
    public partial class LandValidateTrackRegression : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.Link_16_RegressionRepository repository.
        /// </summary>
        public static TacViewLib.Link_16_RegressionRepository repo = TacViewLib.Link_16_RegressionRepository.Instance;

        static LandValidateTrackRegression instance = new LandValidateTrackRegression();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public LandValidateTrackRegression()
        {
            tracknumber = "";
            Connection1 = "";
            Connection2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static LandValidateTrackRegression Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable tracknumber.
        /// </summary>
        [TestVariable("a4c26802-8c68-4ca3-ae8a-a6ad08565af8")]
        public string tracknumber
        {
            get { return repo.tracknumber; }
            set { repo.tracknumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection1.
        /// </summary>
        [TestVariable("32f71a6a-cbb1-4dfa-8dc3-a715027e052b")]
        public string Connection1
        {
            get { return repo.connection1; }
            set { repo.connection1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection2.
        /// </summary>
        [TestVariable("bc443494-d8fb-4d99-ba3b-1b56e8b88c37")]
        public string Connection2
        {
            get { return repo.connection2; }
            set { repo.connection2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 250;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2000ms.", new RecordItemIndex(0));
            Delay.Duration(2000, false);
            
            SetTrackNumberInRepo();
            Delay.Milliseconds(0);
            
            RightClickTrack();
            Delay.Milliseconds(0);
            
            ViewTrackProperties();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(4));
            Delay.Duration(3000, false);
            
            ValidateElv();
            Delay.Milliseconds(0);
            
            ValidateInd();
            Delay.Milliseconds(0);
            
            ValidateId();
            Delay.Milliseconds(0);
            
            ValidatePlat();
            Delay.Milliseconds(0);
            
            ValidateAct();
            Delay.Milliseconds(0);
            
            ValidateSType();
            Delay.Milliseconds(0);
            
            ValidateStr();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemBasic_Track_Info' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemBasic_Track_InfoInfo, new RecordItemIndex(12));
            repo.FormMain__Land_Point_Track_TN.ListItemBasic_Track_Info.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            ValidateElv();
            Delay.Milliseconds(0);
            
            ValidateHAE();
            Delay.Milliseconds(0);
            
            ValidateCrsSpd();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemPosition_and_SpeedVelocity' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemPosition_and_SpeedVelocityInfo, new RecordItemIndex(16));
            repo.FormMain__Land_Point_Track_TN.ListItemPosition_and_SpeedVelocity.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            ValidateTrackQuality();
            Delay.Milliseconds(0);
            
            ValidateReportingUnit();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemInterface_Info' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemInterface_InfoInfo, new RecordItemIndex(19));
            repo.FormMain__Land_Point_Track_TN.ListItemInterface_Info.DoubleClick(Location.CenterLeft, 150);
            Delay.Milliseconds(100);
            
            ValidateMode1();
            Delay.Milliseconds(0);
            
            ValidateMode2();
            Delay.Milliseconds(0);
            
            ValidateMode3();
            Delay.Milliseconds(0);
            
            ValidateMode4();
            Delay.Milliseconds(0);
            
            ValidateMode5();
            Delay.Milliseconds(0);
            
            ValidateM5Nat();
            Delay.Milliseconds(0);
            
            ValidateM5ID();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemMode_Codes_Special_Codes' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemMode_Codes_Special_CodesInfo, new RecordItemIndex(27));
            repo.FormMain__Land_Point_Track_TN.ListItemMode_Codes_Special_Codes.DoubleClick(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            ValidateSPI();
            Delay.Milliseconds(0);
            
            //ValidatePassAct();
            //Delay.Milliseconds(0);
            
            ValidateSpecInt();
            Delay.Milliseconds(0);
            
            ValidateTF();
            Delay.Milliseconds(0);
            
            ValidateHR();
            Delay.Milliseconds(0);
            
            ValidateMin();
            Delay.Milliseconds(0);
            
            ValidateHI();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemIndicators' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemIndicatorsInfo, new RecordItemIndex(35));
            repo.FormMain__Land_Point_Track_TN.ListItemIndicators.DoubleClick(Location.CenterLeft, 150);
            Delay.Milliseconds(100);
            
            ValidateTotVeh();
            Delay.Milliseconds(0);
            
            ValidatePerVeh();
            Delay.Milliseconds(0);
            
            ValidateRoute();
            Delay.Milliseconds(0);
            
            ValidateTrkId();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemLand_Info' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemLand_InfoInfo, new RecordItemIndex(40));
            repo.FormMain__Land_Point_Track_TN.ListItemLand_Info.DoubleClick(Location.CenterLeft, 150);
            Delay.Milliseconds(100);
            
            ValidateCirSq();
            Delay.Milliseconds(0);
            
            ValidateAOPMaj();
            Delay.Milliseconds(0);
            
            ValidateAOPMin();
            Delay.Milliseconds(0);
            
            ValidateOrient();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Land_Point_Track_TN.ListItemAOP_Info' at CenterLeft.", repo.FormMain__Land_Point_Track_TN.ListItemAOP_InfoInfo, new RecordItemIndex(45));
            repo.FormMain__Land_Point_Track_TN.ListItemAOP_Info.DoubleClick(Location.CenterLeft, 150);
            Delay.Milliseconds(100);
            
            ValidateIDL();
            Delay.Milliseconds(0);
            
            ValidateTADIL();
            Delay.Milliseconds(0);
            
            ValidateATDL1();
            Delay.Milliseconds(0);
            
            ValidateNL1();
            Delay.Milliseconds(0);
            
            ValidateTADILJ();
            Delay.Milliseconds(0);
            
            ValidateExt();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Land_Point_Track_TN.ButtonCLOSE' at Center.", repo.FormMain__Land_Point_Track_TN.ButtonCLOSEInfo, new RecordItemIndex(52));
            repo.FormMain__Land_Point_Track_TN.ButtonCLOSE.Click();
            Delay.Milliseconds(0);
            
            RightClickTrack();
            Delay.Milliseconds(0);
            
            DropTrack();
            Delay.Milliseconds(0);
            
            Validate_DropTrack();
            Delay.Milliseconds(0);
            
            Zoom500();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
}
