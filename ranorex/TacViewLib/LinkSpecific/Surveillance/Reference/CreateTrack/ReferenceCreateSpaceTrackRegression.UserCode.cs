///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.Surveillance.Reference.CreateTrack
{
    public partial class ReferenceCreateSpaceTrackRegression
    {
		public static string track1;
		public static int TCount;

		//************************************************************************************//
		//**********************************Gets Track Count**********************************//
		//************************************************************************************//
		
		public void GetTrackCount()
		{			
			Ranorex.Container cont1 = repo.FormTacViewC2.ContainerRvView;
			IList<Picture> list1 = cont1.Find<Picture>(@"/form[@title~'^TacViewC2\ \ \ \(map:\ .*']/element/container/picture[@accessiblevalue='Track']");
			TCount = list1.Count; 		
		}

		//************************************************************************************//
		//*********************************Gets Track Number**********************************//
		//************************************************************************************//
			
		public void GetTrackNum()			
		{
		    TCount++;
		    Accessible pic1 = @"/form[@title~'^TacViewC2\ \ \ \(map:\ .*']/element/container/picture[@accessiblevalue='Track']" + "[" + TCount + "]";
   			Accessible accElement = new Accessible(pic1);  
   			string track1 = accElement.Name;
   			Report.Info("Track Number = " + track1);
   			Reference.CreateTrack.ReferenceCreateTrackRegression.SpTrk = track1;
   			ValidateTrack.DropSpaceTrackRegression.SpcTrackNum = track1;  	
		}
		
		//************************************************************************************//
		//*******************************Enters Random Platform*******************************//
		//************************************************************************************//
		
		public void IdVal()
		{

				repo.FormMain__Space_TN.ListItemIdentity.Click("CenterLeft");
			    Keyboard.Press(Keys.Tab);
			    Keyboard.Press("{LMenu down}{Down}{LMenu up}");
				Ranorex.List list2 = "//list[@processname='RealView']";
	            int AScount = list2.Items.Count;
	            Random ASvalue = new Random();
				int ASnum = ASvalue.Next(0, AScount);
		        repo.ListRealView.Self.Items[ASnum].Select();
		       	repo.ListRealView.Self.Items[ASnum].Click("center");
				Accessible accElement = new Accessible(repo.FormMain__Space_TN.ListItemIdentity);  
		   		string IDValue = accElement.Value;
		   		Report.Info("Identity Entered = " + IDValue);

		}		
		
		//************************************************************************************//
		//*******************************Enters Random Platform*******************************//
		//************************************************************************************//
		
		public void PlatVal()
		{

				repo.FormMain__Space_TN.ListItemPlatform.Click("CenterLeft");
			    Keyboard.Press(Keys.Tab);
			    Keyboard.Press("{LMenu down}{Down}{LMenu up}");
				Ranorex.List list2 = "//list[@processname='RealView']";
	            int AScount = list2.Items.Count;
	            Random ASvalue = new Random();
	            AScount--;
				int ASnum = ASvalue.Next(1, AScount);
		       	repo.ListRealView.Self.Items[ASnum].Select();
		       	repo.ListRealView.Self.Items[ASnum].Click("center");
				Accessible accElement = new Accessible(repo.FormMain__Space_TN.ListItemPlatform);  
		   		string PlatValue = accElement.Value;
		   		Report.Info("Platform Entered = " + PlatValue);

		}		

		//************************************************************************************//
		//*******************************Enters Random Activity*******************************//
		//************************************************************************************//
		
		public void ActVal()
		{

				repo.FormMain__Space_TN.ListItemActivity.Click("CenterLeft");
			    Keyboard.Press(Keys.Tab);
			    Keyboard.Press("{LMenu down}{Down}{LMenu up}");
				Ranorex.List list2 = "//list[@processname='RealView']";
	            int AScount = list2.Items.Count;
	            Random ASvalue = new Random();
	            AScount--;
				int ASnum = ASvalue.Next(1, AScount);
		       	repo.ListRealView.Self.Items[ASnum].Select();
		       	repo.ListRealView.Self.Items[ASnum].Click("center");
				Accessible accElement = new Accessible(repo.FormMain__Space_TN.ListItemActivity);  
		   		string ActValue = accElement.Value;
		   		Report.Info("Activity Entered = " + ActValue);

		}	
		
		//************************************************************************************//
		//*****************************Enters Random Specific Type****************************//
		//************************************************************************************//
		
		public void STypeVal()
		{

			repo.FormMain__Space_TN.ListItemSpecific_Type.Click("CenterLeft");
		    Keyboard.Press(Keys.Tab);
		    Keyboard.Press("{LMenu down}{Down}{LMenu up}");
			Ranorex.List list2 = "//list[@processname='RealView']";
            int AScount = list2.Items.Count;
            Random ASvalue = new Random();
            AScount--;
			int ASnum = ASvalue.Next(1, AScount);
		    repo.ListRealView.Self.Items[ASnum].Select();
		    repo.ListRealView.Self.Items[ASnum].Click("center");
		    Accessible accElement = new Accessible(repo.FormMain__Space_TN.ListItemSpecific_Type);  
		   	string STypeValue = accElement.Value;
		   	Report.Info("Specific Type Entered = " + STypeValue);

		}			
		
		//************************************************************************************//
		//****************************Enters Random Altitude Value****************************//
		//************************************************************************************//
		
		public void AltVal()
		{
			CommonUtilLib.Util SharedFunctions = new CommonUtilLib.Util();
			repo.FormMain__Space_TN.ListItemAltitude.Click("CenterLeft");
		    Keyboard.Press(Keys.Tab);
			string b = SharedFunctions.Random(1, 204750);
			Keyboard.Press(b);
   			string AltValue = b;
   			Report.Info("Altitude Value Entered = " + AltValue);
		}				

		//************************************************************************************//
		//*******************************Enters Random Velocity*******************************//
		//************************************************************************************//
		
		public void VelVal()
		{
			CommonUtilLib.Util SharedFunctions = new CommonUtilLib.Util();
			repo.FormMain__Space_TN.ListItemSpeedVelocity.Click("CenterLeft");
		    Keyboard.Press(Keys.Tab);
			string b = SharedFunctions.Random(1, 222); //13107
			Keyboard.Press(b);
			Accessible accElement = new Accessible(repo.FormMain__Space_TN.ListItemSpeedVelocity);  
   			string VelValue = b;
   			Report.Info("Velocity Value Entered = " + VelValue);	
		}
		
		//************************************************************************************//
		//******************************Enters Random True Course*****************************//
		//************************************************************************************//
		
		public void CrsVal()
		{
			CommonUtilLib.Util SharedFunctions = new CommonUtilLib.Util();
			repo.FormMain__Space_TN.ListItemTrue_Course.Click("CenterLeft");
		    Keyboard.Press(Keys.Tab);
			string b = SharedFunctions.Random(1, 359);
			Keyboard.Press(b);
			Keyboard.Press(Keys.Tab); 
   			string CrsValue = b;
   			Report.Info("Course Value Entered = " + CrsValue);
		
			Accessible accElement = new Accessible(repo.FormMain__Space_TN.ListItemMagnetic_Course);  
   			string MagValue = accElement.Value;
   			Report.Info("Magnetic Course Value Entered = " + MagValue);
		}

		//************************************************************************************//
		//******************************Randomly Plots a Track********************************//
		//************************************************************************************//		
		
		public void RandCoord()
		{	
			CommonUtilLib.Util SharedFunctions = new CommonUtilLib.Util();
	       	Ranorex.Container test = @"/form[@title~'^TacViewC2\ \ \ \(map:\ .*']/element/container[@accessiblename='RvView']";
	       	var a = test.ScreenRectangle.Width;
	       	var b = test.ScreenRectangle.Height;
	       	int c = Convert.ToInt32(a);
	       	c = c - 100;
	       	int d = Convert.ToInt32(b);
	       	d = d - 100;
	       	string w = SharedFunctions.Random(100, c);
	       	string h = SharedFunctions.Random(100, d);
	    	repo.FormTacViewC2.ContainerRvView.Click(MouseButtons.Right, "" + w + ";" + h + ""); 
	    	 
	    	Duration OrigDur = repo.FormRealView.MenuItemCreate_TrackInfo.SearchTimeout;
			repo.FormRealView.MenuItemCreate_TrackInfo.SearchTimeout = 1000;			
			
			if (repo.FormRealView.MenuItemCreate_TrackInfo.Exists())
			{
				return;
			}			
			else
			{
				RandCoord();
			}
			
			repo.FormRealView.MenuItemCreate_TrackInfo.SearchTimeout = OrigDur;
		}

		private void Init()
		{
			// Your recording specific initialization code goes here.
		}
	}
}
