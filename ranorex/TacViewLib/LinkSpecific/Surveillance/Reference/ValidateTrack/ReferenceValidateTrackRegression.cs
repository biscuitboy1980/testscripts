///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.Surveillance.Reference.ValidateTrack
{
    /// <summary>
    /// The ReferenceValidateTrackRegression recording.
    /// </summary>
    [TestModule("5d89cc89-4531-4f9a-a20a-8354f0dca62d", ModuleType.Recording, 1)]
    public partial class ReferenceValidateTrackRegression : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.Link_16_RegressionRepository repository.
        /// </summary>
        public static TacViewLib.Link_16_RegressionRepository repo = TacViewLib.Link_16_RegressionRepository.Instance;

        static ReferenceValidateTrackRegression instance = new ReferenceValidateTrackRegression();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ReferenceValidateTrackRegression()
        {
            tracknumber = "";
            Connection1 = "";
            Connection2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ReferenceValidateTrackRegression Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable tracknumber.
        /// </summary>
        [TestVariable("0e3b4d4a-c540-4ed9-a589-446b356c803f")]
        public string tracknumber
        {
            get { return repo.tracknumber; }
            set { repo.tracknumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection1.
        /// </summary>
        [TestVariable("b6590d76-aac1-4e59-9d35-9d5936f7a0b9")]
        public string Connection1
        {
            get { return repo.connection1; }
            set { repo.connection1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection2.
        /// </summary>
        [TestVariable("376efe14-e721-4978-aed7-2cd427d61ce2")]
        public string Connection2
        {
            get { return repo.connection2; }
            set { repo.connection2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 250;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2000ms.", new RecordItemIndex(0));
            Delay.Duration(2000, false);
            
            SetTrackNumberInRepo();
            Delay.Milliseconds(0);
            
            RightClickTrack();
            Delay.Milliseconds(0);
            
            ViewTrackProperties();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 0ms.", new RecordItemIndex(4));
            Delay.Duration(new Duration(0), false);
            
            ValidatePtype();
            Delay.Milliseconds(0);
            
            ValidateAmp();
            Delay.Milliseconds(0);
            
            ValidateEnvCat();
            Delay.Milliseconds(0);
            
            ValidateEnvCatAmp();
            Delay.Milliseconds(0);
            
            ValidateAmpCon();
            Delay.Milliseconds(0);
            
            ValidateTF1();
            Delay.Milliseconds(0);
            
            ValidateSE();
            Delay.Milliseconds(0);
            
            ValidateTF2();
            Delay.Milliseconds(0);
            
            ValidatePer();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Reference_Point_TN.ListItemBasic_Track_Info' at CenterLeft.", repo.FormMain__Reference_Point_TN.ListItemBasic_Track_InfoInfo, new RecordItemIndex(14));
            repo.FormMain__Reference_Point_TN.ListItemBasic_Track_Info.DoubleClick(Location.CenterLeft, 100);
            Delay.Milliseconds(150);
            
            ValidateAlt1();
            Delay.Milliseconds(0);
            
            ValidateAlt2();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Reference_Point_TN.ListItemPosition_and_SpeedVelocity' at CenterLeft.", repo.FormMain__Reference_Point_TN.ListItemPosition_and_SpeedVelocityInfo, new RecordItemIndex(17));
            repo.FormMain__Reference_Point_TN.ListItemPosition_and_SpeedVelocity.DoubleClick(Location.CenterLeft, 100);
            Delay.Milliseconds(150);
            
            ValidateHiPriority();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Reference_Point_TN.ListItemInterface_Info' at CenterLeft.", repo.FormMain__Reference_Point_TN.ListItemInterface_InfoInfo, new RecordItemIndex(19));
            repo.FormMain__Reference_Point_TN.ListItemInterface_Info.DoubleClick(Location.CenterLeft, 100);
            Delay.Milliseconds(150);
            
            ValidateSPI();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Reference_Point_TN.ListItemIndicators' at CenterLeft.", repo.FormMain__Reference_Point_TN.ListItemIndicatorsInfo, new RecordItemIndex(21));
            repo.FormMain__Reference_Point_TN.ListItemIndicators.DoubleClick(Location.CenterLeft, 100);
            Delay.Milliseconds(150);
            
            ValidatePos();
            Delay.Milliseconds(0);
            
            ValidateBurst();
            Delay.Milliseconds(0);
            
            ValidateYield();
            Delay.Milliseconds(0);
            
            ValidateAOPMaj();
            Delay.Milliseconds(0);
            
            ValidateAOPMin();
            Delay.Milliseconds(0);
            
            ValidateOrient();
            Delay.Milliseconds(0);
            
            ValidateCirSq();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormMain__Reference_Point_TN.ListItemReference_Point_Info' at CenterLeft.", repo.FormMain__Reference_Point_TN.ListItemReference_Point_InfoInfo, new RecordItemIndex(29));
            repo.FormMain__Reference_Point_TN.ListItemReference_Point_Info.DoubleClick(Location.CenterLeft, 100);
            Delay.Milliseconds(150);
            
            ValidateSlave();
            Delay.Milliseconds(0);
            
            ValidateRef();
            Delay.Milliseconds(0);
            
            ValidateRelatedTN();
            Delay.Milliseconds(0);
            
            ValidateSono();
            Delay.Milliseconds(0);
            
            ValidateIDL();
            Delay.Milliseconds(0);
            
            ValidateTADIL();
            Delay.Milliseconds(0);
            
            ValidateATDL();
            Delay.Milliseconds(0);
            
            ValidateNL1();
            Delay.Milliseconds(0);
            
            ValidateTADILJ();
            Delay.Milliseconds(0);
            
            ValidateExt();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Reference_Point_TN.ButtonCLOSE' at Center.", repo.FormMain__Reference_Point_TN.ButtonCLOSEInfo, new RecordItemIndex(40));
            repo.FormMain__Reference_Point_TN.ButtonCLOSE.Click(100);
            Delay.Milliseconds(150);
            
            RightClickTrack();
            Delay.Milliseconds(0);
            
            DropTrack();
            Delay.Milliseconds(0);
            
            Validate_DropTrack();
            Delay.Milliseconds(0);
            
            Zoom500();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
}
