///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.Surveillance.Reference.ValidateTrack
{
    /// <summary>
    /// The ValidateTrackSimple recording.
    /// </summary>
    [TestModule("DF8ED0D8-1257-4D09-B41B-8C882DE599C5", ModuleType.Recording, 1)]
    public partial class ValidateTrackRegression : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.Link_16_RegressionRepository repository.
        /// </summary>
        public static TacViewLib.Link_16_RegressionRepository repo = TacViewLib.Link_16_RegressionRepository.Instance;

        static ValidateTrackRegression instance = new ValidateTrackRegression();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateTrackRegression()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateTrackRegression Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 150;
            Keyboard.DefaultKeyPressTime = 25;
            Delay.SpeedFactor = 1.0;

            Init();

            Delay.Duration(2000, false);
            
            CreateTrackRepoItems();
            Delay.Milliseconds(0);
            
            RightClickTrack();
            Delay.Milliseconds(0);
            
            ViewTrackProperties();
            Delay.Milliseconds(0);
            
            Delay.Duration(new Duration(0), false);
            
            ValidatePtype();
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Reference_Point_TN.ButtonCLOSE' at Center.", repo.FormMain__Reference_Point_TN.ButtonCLOSEInfo, new RecordItemIndex(6));
            repo.FormMain__Reference_Point_TN.ButtonCLOSE.Click(100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FormTacViewC2.PictureTrack' at Center.", repo.FormTacViewC2.PictureTrackInfo, new RecordItemIndex(7));
            repo.FormTacViewC2.PictureTrack.Click(MouseButtons.Right, 100);
            Delay.Milliseconds(0);
            
            DropTrack();
            Delay.Milliseconds(100);
            
            Validate_DropTrack();
            Delay.Milliseconds(100);
            
            Zoom500();
            Delay.Milliseconds(100);
            
            ResetPaths();
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
}
