///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.Surveillance.Subsurface.CreateTrack
{
    /// <summary>
    /// The CreateSubSurfaceTrack6016D recording.
    /// </summary>
    [TestModule("a057a34e-d7eb-40f4-bd91-1e892e7d8ee7", ModuleType.Recording, 1)]
    public partial class CreateSubSurfaceTrack6016D : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.TacViewLibRepository repository.
        /// </summary>
        public static TacViewLib.TacViewLibRepository repo = TacViewLib.TacViewLibRepository.Instance;

        static CreateSubSurfaceTrack6016D instance = new CreateSubSurfaceTrack6016D();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateSubSurfaceTrack6016D()
        {
            Plat = "Submarine Propulsion Unknown";
            Act = "Reconnaissance";
            Stype = "SS GENERAL (SUBMARINE, GENERAL, NON-NUCLEAR)";
            Connection2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateSubSurfaceTrack6016D Instance
        {
            get { return instance; }
        }

#region Variables

        string _Plat;

        /// <summary>
        /// Gets or sets the value of variable Plat.
        /// </summary>
        [TestVariable("43a400b7-6252-4f3f-8b9b-241d1b72237e")]
        public string Plat
        {
            get { return _Plat; }
            set { _Plat = value; }
        }

        string _Act;

        /// <summary>
        /// Gets or sets the value of variable Act.
        /// </summary>
        [TestVariable("16773ea3-2cea-4243-88ef-f031fd15891e")]
        public string Act
        {
            get { return _Act; }
            set { _Act = value; }
        }

        string _Stype;

        /// <summary>
        /// Gets or sets the value of variable Stype.
        /// </summary>
        [TestVariable("a8415d6d-7ba0-4c78-b784-63c13b723a78")]
        public string Stype
        {
            get { return _Stype; }
            set { _Stype = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection1.
        /// </summary>
        [TestVariable("df43c705-3ac9-4eb2-89a2-19da9f82d8e5")]
        public string Connection1
        {
            get { return repo.Connection1; }
            set { repo.Connection1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable tracknumber.
        /// </summary>
        [TestVariable("a42b76a2-7ee5-4202-b178-a9f49bc79da2")]
        public string tracknumber
        {
            get { return repo.tracknumber; }
            set { repo.tracknumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection2.
        /// </summary>
        [TestVariable("3e49ff8f-353c-45ac-820d-a0818fbeaa7c")]
        public string Connection2
        {
            get { return repo.Connection2; }
            set { repo.Connection2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 250;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            GetTrackCount();
            Delay.Milliseconds(0);
            
            RandCoord();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRealView.MenuItemCreate_Track' at Center.", repo.FormRealView.MenuItemCreate_TrackInfo, new RecordItemIndex(2));
            repo.FormRealView.MenuItemCreate_Track.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormCreate_Track.MenuItemConnection1' at Center.", repo.FormCreate_Track.MenuItemConnection1Info, new RecordItemIndex(3));
            repo.FormCreate_Track.MenuItemConnection1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormConnection1.MenuItemSubSurface' at Center.", repo.FormConnection1.MenuItemSubSurfaceInfo, new RecordItemIndex(4));
            repo.FormConnection1.MenuItemSubSurface.Click();
            Delay.Milliseconds(0);
            
            IDval();
            Delay.Milliseconds(0);
            
            Platval();
            Delay.Milliseconds(0);
            
            Actval();
            Delay.Milliseconds(0);
            
            Stypeval();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__SubSurface_TN___CREATE.ButtonSave' at Center.", repo.FormMain__SubSurface_TN___CREATE.ButtonSaveInfo, new RecordItemIndex(9));
            repo.FormMain__SubSurface_TN___CREATE.ButtonSave.Click();
            Delay.Milliseconds(0);
            
            GetTrackNum();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
}
