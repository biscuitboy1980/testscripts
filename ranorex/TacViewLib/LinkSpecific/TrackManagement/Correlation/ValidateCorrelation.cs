///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.TrackManagement.Correlation
{
    /// <summary>
    /// The ValidateCorrelation recording.
    /// </summary>
    [TestModule("fd6369bf-585e-4f64-80ab-ff6ce5a573df", ModuleType.Recording, 1)]
    public partial class ValidateCorrelation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.TacViewLibTrackManagement repository.
        /// </summary>
        public static TacViewLib.TacViewLibTrackManagement repo = TacViewLib.TacViewLibTrackManagement.Instance;

        static ValidateCorrelation instance = new ValidateCorrelation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateCorrelation()
        {
            tracknumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateCorrelation Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable tracknumber.
        /// </summary>
        [TestVariable("8172ca0d-79ea-481d-98d7-52070e5507b7")]
        public string tracknumber
        {
            get { return repo.tracknumber; }
            set { repo.tracknumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 250;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            SetRetainedTrackNumberInRepo();
            Delay.Milliseconds(0);
            
            ValidateRetainedTrack();
            Delay.Milliseconds(0);
            
            SetDroppedtTrackNumberInRepo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2000ms.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
            ValidateDroppedTrack();
            Delay.Milliseconds(0);
            
            SetRetainedTrackNumberInRepo();
            Delay.Milliseconds(0);
            
            RightClickTrack();
            Delay.Milliseconds(0);
            
            DropTrack();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2000ms.", new RecordItemIndex(8));
            Delay.Duration(2000, false);
            
            Validate_DropTrack();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
}
