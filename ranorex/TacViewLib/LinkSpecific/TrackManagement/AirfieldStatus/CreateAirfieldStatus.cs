///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.TrackManagement.AirfieldStatus
{
    /// <summary>
    /// The CreateAirfieldStatus recording.
    /// </summary>
    [TestModule("dac82d80-0a37-4b16-bdb9-436d0c1c32c3", ModuleType.Recording, 1)]
    public partial class CreateAirfieldStatus : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.TacViewLibTrackManagement repository.
        /// </summary>
        public static TacViewLib.TacViewLibTrackManagement repo = TacViewLib.TacViewLibTrackManagement.Instance;

        static CreateAirfieldStatus instance = new CreateAirfieldStatus();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateAirfieldStatus()
        {
            tracknumber = "";
            tracknum = "";
            Connection1 = "";
            Connection2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateAirfieldStatus Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable tracknumber.
        /// </summary>
        [TestVariable("70044899-2094-4708-8606-6352f15619fb")]
        public string tracknumber
        {
            get { return repo.tracknumber; }
            set { repo.tracknumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable tracknum.
        /// </summary>
        [TestVariable("2fff73e5-1605-48a2-b91a-61d004568d95")]
        public string tracknum
        {
            get { return repo.tracknum; }
            set { repo.tracknum = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection1.
        /// </summary>
        [TestVariable("06ffac1e-e139-4082-8d74-348e1527c11d")]
        public string Connection1
        {
            get { return repo.Connection1; }
            set { repo.Connection1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection2.
        /// </summary>
        [TestVariable("83627a1e-d2cc-421c-af60-17cd97e81bd2")]
        public string Connection2
        {
            get { return repo.Connection2; }
            set { repo.Connection2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.0;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2000ms.", new RecordItemIndex(0));
            Delay.Duration(2000, false);
            
            SetTrackNumberInRepo();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FormTacViewC2.PictureTrack' at Center.", repo.FormTacViewC2.PictureTrackInfo, new RecordItemIndex(2));
            repo.FormTacViewC2.PictureTrack.Click(System.Windows.Forms.MouseButtons.Right);
            
            CreateAirStatus();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(4));
            Delay.Duration(500, false);
            
            AirfieldStat();
            
            AirRaidStat();
            
            NucContInd();
            
            BioContInd();
            
            ChemContInd();
            
            BaseWeatherStat();
            
            CrashService();
            
            Shoradez();
            
            TimeObsHr();
            
            TimeObsMin();
            
            SecRunInd();
            
            QNH();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormCreate_Airfield_Status.ListItemAirfield_StatusPlus' at Center.", repo.FormCreate_Airfield_Status.ListItemAirfield_StatusPlusInfo, new RecordItemIndex(17));
            repo.FormCreate_Airfield_Status.ListItemAirfield_StatusPlus.DoubleClick();
            
            ARDirection();
            
            ARAvailableLength();
            
            ARVisualRange();
            
            ARStatus();
            
            ARGCA();
            
            ARILS();
            
            ARApproachLight();
            
            ARArrestBar();
            
            ARBrakeAct();
            
            ARArrestWire();
            
            QFE();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormCreate_Airfield_Status.ListItemActive_RunwayPlus' at Center.", repo.FormCreate_Airfield_Status.ListItemActive_RunwayPlusInfo, new RecordItemIndex(29));
            repo.FormCreate_Airfield_Status.ListItemActive_RunwayPlus.DoubleClick();
            
            WindDir();
            
            WindSp();
            
            WindGust();
            
            CloudCover1();
            
            CloudHeight1();
            
            CloudCover2();
            
            CloudHeight2();
            
            CloudCover3();
            
            CloudHeight3();
            
            Visibility();
            
            WindShear();
            
            ActualWeatherDes();
            
            ActualWeatherInt();
            
            ActualWeather();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormCreate_Airfield_Status.ListItemWeatherPlus' at Center.", repo.FormCreate_Airfield_Status.ListItemWeatherPlusInfo, new RecordItemIndex(44));
            repo.FormCreate_Airfield_Status.ListItemWeatherPlus.DoubleClick();
            
            AVTUR();
            
            LiquidOxygen();
            
            Nitrogen();
            
            AIM9L();
            
            AIM9M();
            
            AIM9P();
            
            SkyFlash();
            
            AIM120();
            
            AIM132();
            
            MagicI();
            
            MagicII();
            
            Super530();
            
            Super530D();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormCreate_Airfield_Status.ListItemMICA_AAM' at Center.", repo.FormCreate_Airfield_Status.ListItemMICA_AAMInfo, new RecordItemIndex(58));
            repo.FormCreate_Airfield_Status.ListItemMICA_AAM.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'PgDn' Press.", new RecordItemIndex(59));
            Keyboard.Press(System.Windows.Forms.Keys.Next, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            MICA();
            
            AAM1();
            
            AAM2();
            
            AAM3();
            
            AAM4();
            
            Durandal();
            
            BAP();
            
            ASM1();
            
            ASM2();
            
            ASM3();
            
            ASM4();
            
            AntiSub();
            
            NDB();
            
            Bomb500();
            
            Bomb1000();
            
            Ammo20();
            
            Ammo27();
            
            Ammo30();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormCreate_Airfield_Status.ButtonSave' at Center.", repo.FormCreate_Airfield_Status.ButtonSaveInfo, new RecordItemIndex(78));
            repo.FormCreate_Airfield_Status.ButtonSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
}
