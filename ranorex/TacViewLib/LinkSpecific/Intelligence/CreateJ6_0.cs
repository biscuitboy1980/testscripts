///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.LinkSpecific.Intelligence
{
    /// <summary>
    /// The CreateJ6_0 recording.
    /// </summary>
    [TestModule("c96e893d-1d2c-4e99-a51f-0d7d69b6d2a7", ModuleType.Recording, 1)]
    public partial class CreateJ6_0 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.TacViewLibRepository repository.
        /// </summary>
        public static TacViewLib.TacViewLibRepository repo = TacViewLib.TacViewLibRepository.Instance;

        static CreateJ6_0 instance = new CreateJ6_0();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateJ6_0()
        {
            tracknumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateJ6_0 Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable tracknumber.
        /// </summary>
        [TestVariable("e6894bf9-5992-41e6-b5b1-e77ce0dae477")]
        public string tracknumber
        {
            get { return repo.tracknumber; }
            set { repo.tracknumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Connection1.
        /// </summary>
        [TestVariable("df43c705-3ac9-4eb2-89a2-19da9f82d8e5")]
        public string Connection1
        {
            get { return repo.Connection1; }
            set { repo.Connection1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 250;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FormTacViewC2.PictureTrack' at Center.", repo.FormTacViewC2.PictureTrackInfo, new RecordItemIndex(0));
            repo.FormTacViewC2.PictureTrack.Click(System.Windows.Forms.MouseButtons.Right);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRealView.MenuItemTrackNumber' at Center.", repo.FormRealView.MenuItemTrackNumberInfo, new RecordItemIndex(1));
            repo.FormRealView.MenuItemTrackNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormConnection1.MenuItemTrackProperties' at Center.", repo.FormConnection1.MenuItemTrackPropertiesInfo, new RecordItemIndex(2));
            repo.FormConnection1.MenuItemTrackProperties.Click();
            Delay.Milliseconds(250);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormTrackProperties.TabPageIntel' at Center.", repo.FormTrackProperties.TabPageIntelInfo, new RecordItemIndex(3));
            repo.FormTrackProperties.TabPageIntel.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormIntel__Air_TN_.ButtonEdit_Track' at Center.", repo.FormIntel__Air_TN_.ButtonEdit_TrackInfo, new RecordItemIndex(4));
            repo.FormIntel__Air_TN_.ButtonEdit_Track.Click(100);
            Delay.Milliseconds(0);
            
            AmpNationality();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormIntel__Air_TN_.ButtonSave' at Center.", repo.FormIntel__Air_TN_.ButtonSaveInfo, new RecordItemIndex(6));
            repo.FormIntel__Air_TN_.ButtonSave.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormIntel__Air_TN_.ButtonClose' at Center.", repo.FormIntel__Air_TN_.ButtonCloseInfo, new RecordItemIndex(7));
            repo.FormIntel__Air_TN_.ButtonClose.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
}
