///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.UISpecific.ACO
{
	/// <summary>
	/// The ImportACO recording.
	/// </summary>
	[TestModule("c2b084e3-d596-4f38-a2be-d719f8a42da5", ModuleType.Recording, 1)]
	public partial class ImportACO : ITestModule
	{
		/// <summary>
		/// Holds an instance of the TacViewLib.TacViewLibRepositoryUISpecific repository.
		/// </summary>
		public static TacViewLib.TacViewLibRepositoryUISpecific repo = TacViewLib.TacViewLibRepositoryUISpecific.Instance;

		static ImportACO instance = new ImportACO();

		/// <summary>
		/// Constructs a new instance.
		/// </summary>
		public ImportACO()
		{
		}

		/// <summary>
		/// Gets a static instance of this recording.
		/// </summary>
		public static ImportACO Instance
		{
			get { return instance; }
		}

#region Variables

#endregion

		/// <summary>
		/// Starts the replay of the static recording <see cref="Instance"/>.
		/// </summary>
		[System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
		public static void Start()
		{
			TestModuleRunner.Run(Instance);
		}

		/// <summary>
		/// Performs the playback of actions in this recording.
		/// </summary>
		/// <remarks>You should not call this method directly, instead pass the module
		/// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
		/// that will in turn invoke this method.</remarks>
		[System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
		void ITestModule.Run()
		{
			Mouse.DefaultMoveTime = 150;
			Keyboard.DefaultKeyPressTime = 25;
			Delay.SpeedFactor = 1.0;

			Init();

			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TacView_TitleBar.File' at Center.", repo.TacView_TitleBar.FileInfo, new RecordItemIndex(0));
			repo.TacView_TitleBar.File.Click(250);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'File_Menu.Import_ACO' at Center.", repo.File_Menu.Import_ACOInfo, new RecordItemIndex(1));
			repo.File_Menu.Import_ACO.Click(250);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'GeoImage.FormImport_Maps.FileCombo' at CenterLeft.", repo.GeoImage.FormImport_Maps.FileComboInfo, new RecordItemIndex(2));
			repo.GeoImage.FormImport_Maps.FileCombo.Click(Location.CenterLeft, 100);
			Delay.Milliseconds(0);
			
			EnterACO();
			Delay.Milliseconds(150);
			
			Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(4));
			Keyboard.Press(Keys.Return, Keyboard.DefaultScanCode, 100, 1, true);
			Delay.Milliseconds(0);
			
			// Error log is displayed
			Validate_ACO_Error_Log();
			Delay.Milliseconds(250);
			
			// Error Log buttons are available
			Validate_Save();
			Delay.Milliseconds(250);
			
			// Error Log buttons are available
			Validate_Cancel();
			Delay.Milliseconds(250);
			
			// Error Log buttons are available
			Validate_Next();
			Delay.Milliseconds(250);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ACO.ACO_Error_Log.Next' at Center.", repo.ACO.ACO_Error_Log.NextInfo, new RecordItemIndex(9));
			repo.ACO.ACO_Error_Log.Next.Click(250);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ACO.Import_ACM_Control.All_ACMs' at Center.", repo.ACO.Import_ACM_Control.All_ACMsInfo, new RecordItemIndex(10));
			repo.ACO.Import_ACM_Control.All_ACMs.DoubleClick(250);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ACO.Import_ACM_Control.ATC' at Center.", repo.ACO.Import_ACM_Control.ATCInfo, new RecordItemIndex(11));
			repo.ACO.Import_ACM_Control.ATC.DoubleClick(156);
			Delay.Milliseconds(90);
			
			// Validates Title bar
			Validate_Import_ACMs_From_File();
			Delay.Milliseconds(250);
			
			// Vaildates correct number of ACMs are available.
			Validate_Caption_607_ACMs_available();
			Delay.Milliseconds(250);
			
			// Validates all ACMs level is displayed
			Validate_All_ACMs();
			Delay.Milliseconds(250);
			
			// Validates ACM Type level is displayed
			Validate_ATC();
			Delay.Milliseconds(250);
			
			// Validates ACM Name level is displayed
			Validate_POLK_ARMY_AIRFIELD();
			Delay.Milliseconds(250);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ACO.Import_ACM_Control.OK' at Center.", repo.ACO.Import_ACM_Control.OKInfo, new RecordItemIndex(17));
			repo.ACO.Import_ACM_Control.OK.Click(100);
			Delay.Milliseconds(0);
			
			CloseDialog();
			Delay.Milliseconds(0);
			
		}

#region Image Feature Data
#endregion
	}
}
