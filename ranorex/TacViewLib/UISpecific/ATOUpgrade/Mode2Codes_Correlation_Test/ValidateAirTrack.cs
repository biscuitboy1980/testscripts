///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.UISpecific.ATOUpgrade.Mode2Codes_Correlation_Test
{
	/// <summary>
	/// The ValidateAirTrack recording.
	/// </summary>
	[TestModule("70182afd-733f-4612-9a2d-6b4ade8e41e5", ModuleType.Recording, 1)]
	public partial class ValidateAirTrack : ITestModule
	{
		/// <summary>
		/// Holds an instance of the TacViewLib.ATOUpgradeRepository repository.
		/// </summary>
		public static TacViewLib.ATOUpgradeRepository repo = TacViewLib.ATOUpgradeRepository.Instance;

		static ValidateAirTrack instance = new ValidateAirTrack();

		/// <summary>
		/// Constructs a new instance.
		/// </summary>
		public ValidateAirTrack()
		{
		}

		/// <summary>
		/// Gets a static instance of this recording.
		/// </summary>
		public static ValidateAirTrack Instance
		{
			get { return instance; }
		}

#region Variables

#endregion

		/// <summary>
		/// Starts the replay of the static recording <see cref="Instance"/>.
		/// </summary>
		[System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
		public static void Start()
		{
			TestModuleRunner.Run(Instance);
		}

		/// <summary>
		/// Performs the playback of actions in this recording.
		/// </summary>
		/// <remarks>You should not call this method directly, instead pass the module
		/// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
		/// that will in turn invoke this method.</remarks>
		[System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
		void ITestModule.Run()
		{
			Mouse.DefaultMoveTime = 150;
			Keyboard.DefaultKeyPressTime = 25;
			Delay.SpeedFactor = 1.0;

			Init();

			Delay.Duration(2000, false);
			
			CreateTrackRepoItems();
			Delay.Milliseconds(0);
			
			RightClickTrack();
			Delay.Milliseconds(0);
			
			ViewTrackProperties();
			Delay.Milliseconds(0);
			
			Delay.Duration(1000, false);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__Air_TN.TabPageATO' at Center.", repo.FormMain__Air_TN.TabPageATOInfo, new RecordItemIndex(5));
			repo.FormMain__Air_TN.TabPageATO.Click();
			Delay.Milliseconds(0);
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='ATO Call Sign') on item 'FormATO__Air.ListItemATO_Call_Sign'.", repo.FormATO__Air.ListItemATO_Call_SignInfo, new RecordItemIndex(6));
				Validate.Attribute(repo.FormATO__Air.ListItemATO_Call_SignInfo, "Text", "ATO Call Sign", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='WAKEN51') on item 'FormATO__Air.ListItemATO_Call_Sign'.", repo.FormATO__Air.ListItemATO_Call_SignInfo, new RecordItemIndex(7));
				Validate.Attribute(repo.FormATO__Air.ListItemATO_Call_SignInfo, "AccessibleValue", "WAKEN51", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Number of Aircraft') on item 'FormATO__Air.ListItemNumber_of_Aircraft'.", repo.FormATO__Air.ListItemNumber_of_AircraftInfo, new RecordItemIndex(8));
				Validate.Attribute(repo.FormATO__Air.ListItemNumber_of_AircraftInfo, "Text", "Number of Aircraft", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='6') on item 'FormATO__Air.ListItemNumber_of_Aircraft'.", repo.FormATO__Air.ListItemNumber_of_AircraftInfo, new RecordItemIndex(9));
				Validate.Attribute(repo.FormATO__Air.ListItemNumber_of_AircraftInfo, "AccessibleValue", "6", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='AC Type') on item 'FormATO__Air.ListItemAC_Type'.", repo.FormATO__Air.ListItemAC_TypeInfo, new RecordItemIndex(10));
				Validate.Attribute(repo.FormATO__Air.ListItemAC_TypeInfo, "Text", "AC Type", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='OTHAC:UH60H') on item 'FormATO__Air.ListItemAC_Type'.", repo.FormATO__Air.ListItemAC_TypeInfo, new RecordItemIndex(11));
				Validate.Attribute(repo.FormATO__Air.ListItemAC_TypeInfo, "AccessibleValue", "OTHAC:UH60H", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Primary Config Code') on item 'FormATO__Air.ListItemPrimary_Config_Code'.", repo.FormATO__Air.ListItemPrimary_Config_CodeInfo, new RecordItemIndex(12));
				Validate.Attribute(repo.FormATO__Air.ListItemPrimary_Config_CodeInfo, "Text", "Primary Config Code", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='BEST') on item 'FormATO__Air.ListItemPrimary_Config_Code'.", repo.FormATO__Air.ListItemPrimary_Config_CodeInfo, new RecordItemIndex(13));
				Validate.Attribute(repo.FormATO__Air.ListItemPrimary_Config_CodeInfo, "AccessibleValue", "BEST", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Secondary Config Code') on item 'FormATO__Air.ListItemSecondary_Config_Code'.", repo.FormATO__Air.ListItemSecondary_Config_CodeInfo, new RecordItemIndex(14));
				Validate.Attribute(repo.FormATO__Air.ListItemSecondary_Config_CodeInfo, "Text", "Secondary Config Code", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='BEST') on item 'FormATO__Air.ListItemSecondary_Config_Code'.", repo.FormATO__Air.ListItemSecondary_Config_CodeInfo, new RecordItemIndex(15));
				Validate.Attribute(repo.FormATO__Air.ListItemSecondary_Config_CodeInfo, "AccessibleValue", "BEST", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Mode 2 Code') on item 'FormATO__Air.ListItemMode_2_Code'.", repo.FormATO__Air.ListItemMode_2_CodeInfo, new RecordItemIndex(16));
				Validate.Attribute(repo.FormATO__Air.ListItemMode_2_CodeInfo, "Text", "Mode 2 Code", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='7450') on item 'FormATO__Air.ListItemMode_2_Code'.", repo.FormATO__Air.ListItemMode_2_CodeInfo, new RecordItemIndex(17));
				Validate.Attribute(repo.FormATO__Air.ListItemMode_2_CodeInfo, "AccessibleValue", "7450", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Mode 3 Code') on item 'FormATO__Air.ListItemMode_3_Code'.", repo.FormATO__Air.ListItemMode_3_CodeInfo, new RecordItemIndex(18));
				Validate.Attribute(repo.FormATO__Air.ListItemMode_3_CodeInfo, "Text", "Mode 3 Code", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='7451') on item 'FormATO__Air.ListItemMode_3_Code'.", repo.FormATO__Air.ListItemMode_3_CodeInfo, new RecordItemIndex(19));
				Validate.Attribute(repo.FormATO__Air.ListItemMode_3_CodeInfo, "AccessibleValue", "7451", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormATO__Air.ListItemAircraft' at CenterLeft.", repo.FormATO__Air.ListItemAircraftInfo, new RecordItemIndex(20));
			repo.FormATO__Air.ListItemAircraft.DoubleClick(Location.CenterLeft);
			Delay.Milliseconds(0);
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Mission Number') on item 'FormATO__Air.ListItemMission_Number'.", repo.FormATO__Air.ListItemMission_NumberInfo, new RecordItemIndex(21));
				Validate.Attribute(repo.FormATO__Air.ListItemMission_NumberInfo, "Text", "Mission Number", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='7450') on item 'FormATO__Air.ListItemMission_Number'.", repo.FormATO__Air.ListItemMission_NumberInfo, new RecordItemIndex(22));
				Validate.Attribute(repo.FormATO__Air.ListItemMission_NumberInfo, "AccessibleValue", "7450", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Primary Mission Type') on item 'FormATO__Air.ListItemPrimary_Mission_Type'.", repo.FormATO__Air.ListItemPrimary_Mission_TypeInfo, new RecordItemIndex(23));
				Validate.Attribute(repo.FormATO__Air.ListItemPrimary_Mission_TypeInfo, "Text", "Primary Mission Type", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='TALD') on item 'FormATO__Air.ListItemPrimary_Mission_Type'.", repo.FormATO__Air.ListItemPrimary_Mission_TypeInfo, new RecordItemIndex(24));
				Validate.Attribute(repo.FormATO__Air.ListItemPrimary_Mission_TypeInfo, "AccessibleValue", "TALD", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Mission Start Time') on item 'FormATO__Air.ListItemMission_Start_Time'.", repo.FormATO__Air.ListItemMission_Start_TimeInfo, new RecordItemIndex(25));
				Validate.Attribute(repo.FormATO__Air.ListItemMission_Start_TimeInfo, "Text", "Mission Start Time", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='01/06/11 14:00:00') on item 'FormATO__Air.ListItemMission_Start_Time'.", repo.FormATO__Air.ListItemMission_Start_TimeInfo, new RecordItemIndex(26));
				Validate.Attribute(repo.FormATO__Air.ListItemMission_Start_TimeInfo, "AccessibleValue", "01/06/11 14:00:00", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Mission Stop Time') on item 'FormATO__Air.ListItemMission_Stop_Time'.", repo.FormATO__Air.ListItemMission_Stop_TimeInfo, new RecordItemIndex(27));
				Validate.Attribute(repo.FormATO__Air.ListItemMission_Stop_TimeInfo, "Text", "Mission Stop Time", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='01/07/11 13:59:00') on item 'FormATO__Air.ListItemMission_Stop_Time'.", repo.FormATO__Air.ListItemMission_Stop_TimeInfo, new RecordItemIndex(28));
				Validate.Attribute(repo.FormATO__Air.ListItemMission_Stop_TimeInfo, "AccessibleValue", "01/07/11 13:59:00", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormATO__Air.ListItemMission' at CenterLeft.", repo.FormATO__Air.ListItemMissionInfo, new RecordItemIndex(29));
			repo.FormATO__Air.ListItemMission.DoubleClick(Location.CenterLeft);
			Delay.Milliseconds(0);
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Country') on item 'FormATO__Air.ListItemCountry'.", repo.FormATO__Air.ListItemCountryInfo, new RecordItemIndex(30));
				Validate.Attribute(repo.FormATO__Air.ListItemCountryInfo, "Text", "Country", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='US') on item 'FormATO__Air.ListItemCountry'.", repo.FormATO__Air.ListItemCountryInfo, new RecordItemIndex(31));
				Validate.Attribute(repo.FormATO__Air.ListItemCountryInfo, "AccessibleValue", "US", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Service') on item 'FormATO__Air.ListItemService'.", repo.FormATO__Air.ListItemServiceInfo, new RecordItemIndex(32));
				Validate.Attribute(repo.FormATO__Air.ListItemServiceInfo, "Text", "Service", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='F') on item 'FormATO__Air.ListItemService'.", repo.FormATO__Air.ListItemServiceInfo, new RecordItemIndex(33));
				Validate.Attribute(repo.FormATO__Air.ListItemServiceInfo, "AccessibleValue", "F", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Tasked Unit') on item 'FormATO__Air.ListItemTasked_Unit'.", repo.FormATO__Air.ListItemTasked_UnitInfo, new RecordItemIndex(34));
				Validate.Attribute(repo.FormATO__Air.ListItemTasked_UnitInfo, "Text", "Tasked Unit", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibleValue='UNIT:TEST') on item 'FormATO__Air.ListItemTasked_Unit'.", repo.FormATO__Air.ListItemTasked_UnitInfo, new RecordItemIndex(35));
				Validate.Attribute(repo.FormATO__Air.ListItemTasked_UnitInfo, "AccessibleValue", "UNIT:TEST", Validate.DefaultMessage, false);
				Delay.Milliseconds(150);
			} catch(Exception) { }
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FormATO__Air.ListItemUnit' at CenterLeft.", repo.FormATO__Air.ListItemUnitInfo, new RecordItemIndex(36));
			repo.FormATO__Air.ListItemUnit.DoubleClick(Location.CenterLeft);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Source File') on item 'FormATO__Air.ListItemSource_File'.", repo.FormATO__Air.ListItemSource_FileInfo, new RecordItemIndex(37));
			Validate.Attribute(repo.FormATO__Air.ListItemSource_FileInfo, "Text", "Source File");
			Delay.Milliseconds(150);
			
			Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleValue='ATOSmall1.txt') on item 'FormATO__Air.ListItemSource_File'.", repo.FormATO__Air.ListItemSource_FileInfo, new RecordItemIndex(38));
			Validate.Attribute(repo.FormATO__Air.ListItemSource_FileInfo, "AccessibleValue", "ATOSmall1.txt");
			Delay.Milliseconds(150);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormATO__Air.ButtonDrop_Track' at Center.", repo.FormATO__Air.ButtonDrop_TrackInfo, new RecordItemIndex(39));
			repo.FormATO__Air.ButtonDrop_Track.Click();
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RealViewDialog.ButtonYes' at Center.", repo.RealViewDialog.ButtonYesInfo, new RecordItemIndex(40));
			repo.RealViewDialog.ButtonYes.Click();
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormATO__Air.ButtonCLOSE' at Center.", repo.FormATO__Air.ButtonCLOSEInfo, new RecordItemIndex(41));
			repo.FormATO__Air.ButtonCLOSE.Click();
			Delay.Milliseconds(0);
			
			Validate_DropTrack();
			Delay.Milliseconds(0);
			
			ResetPaths();
			Delay.Milliseconds(0);
			
		}

#region Image Feature Data
#endregion
	}
}
