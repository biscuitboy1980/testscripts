///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.UISpecific.ATOUpgrade.ATOCallSign_Query_Test
{
	/// <summary>
	/// The CreateQuery recording.
	/// </summary>
	[TestModule("458f98b8-fad6-4716-b1c0-fa9f138ba7b0", ModuleType.Recording, 1)]
	public partial class CreateQuery : ITestModule
	{
		/// <summary>
		/// Holds an instance of the TacViewLib.TacViewLibRepository repository.
		/// </summary>
		public static TacViewLib.TacViewLibRepository repo = TacViewLib.TacViewLibRepository.Instance;

		static CreateQuery instance = new CreateQuery();

		/// <summary>
		/// Constructs a new instance.
		/// </summary>
		public CreateQuery()
		{
		}

		/// <summary>
		/// Gets a static instance of this recording.
		/// </summary>
		public static CreateQuery Instance
		{
			get { return instance; }
		}

#region Variables

#endregion

		/// <summary>
		/// Starts the replay of the static recording <see cref="Instance"/>.
		/// </summary>
		[System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
		public static void Start()
		{
			TestModuleRunner.Run(Instance);
		}

		/// <summary>
		/// Performs the playback of actions in this recording.
		/// </summary>
		/// <remarks>You should not call this method directly, instead pass the module
		/// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
		/// that will in turn invoke this method.</remarks>
		[System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
		void ITestModule.Run()
		{
			Mouse.DefaultMoveTime = 150;
			Keyboard.DefaultKeyPressTime = 25;
			Delay.SpeedFactor = 1.0;

			Init();

			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click at Center.", new RecordItemIndex(0));
			Mouse.MoveTo(0, 0);
			Mouse.Click(MouseButtons.Left);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click at CenterLeft.", new RecordItemIndex(1));
			Mouse.MoveTo(388, 140);
			Mouse.Click(MouseButtons.Left);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click at Center.", new RecordItemIndex(2));
			Mouse.MoveTo(680, 402);
			Mouse.Click(MouseButtons.Left);
			Delay.Milliseconds(0);
			
			SelectQuery();
			Delay.Milliseconds(150);
			
			Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
			Keyboard.Press(Keys.Tab, Keyboard.DefaultScanCode, 100, 1, true);
			Delay.Milliseconds(50);
			
			Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'GABBY61'.", new RecordItemIndex(5));
			Keyboard.Press("GABBY61", 100);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click at Center.", new RecordItemIndex(6));
			Mouse.MoveTo(714, 619);
			Mouse.Click(MouseButtons.Left);
			Delay.Milliseconds(0);
			
		}

#region Image Feature Data
#endregion
	}
}
