///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.UISpecific.ATOUpgrade
{
	/// <summary>
	/// The ValidateATOListView recording.
	/// </summary>
	[TestModule("8089550d-af40-478c-8f7e-9583886fb3c7", ModuleType.Recording, 1)]
	public partial class ValidateATOListView : ITestModule
	{
		/// <summary>
		/// Holds an instance of the TacViewLib.ATOUpgradeRepository repository.
		/// </summary>
		public static TacViewLib.ATOUpgradeRepository repo = TacViewLib.ATOUpgradeRepository.Instance;

		static ValidateATOListView instance = new ValidateATOListView();

		/// <summary>
		/// Constructs a new instance.
		/// </summary>
		public ValidateATOListView()
		{
		}

		/// <summary>
		/// Gets a static instance of this recording.
		/// </summary>
		public static ValidateATOListView Instance
		{
			get { return instance; }
		}

#region Variables

#endregion

		/// <summary>
		/// Starts the replay of the static recording <see cref="Instance"/>.
		/// </summary>
		[System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
		public static void Start()
		{
			TestModuleRunner.Run(Instance);
		}

		/// <summary>
		/// Performs the playback of actions in this recording.
		/// </summary>
		/// <remarks>You should not call this method directly, instead pass the module
		/// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
		/// that will in turn invoke this method.</remarks>
		[System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.0.0")]
		void ITestModule.Run()
		{
			Mouse.DefaultMoveTime = 150;
			Keyboard.DefaultKeyPressTime = 25;
			Delay.SpeedFactor = 1.0;

			Init();

			Delay.Duration(2000, false);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormTacViewC2.MenuItemATO' at Center.", repo.FormTacViewC2.MenuItemATOInfo, new RecordItemIndex(1));
			repo.FormTacViewC2.MenuItemATO.Click(125);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormATO.MenuItemView_Database' at 47;17.", repo.FormATO.MenuItemView_DatabaseInfo, new RecordItemIndex(2));
			repo.FormATO.MenuItemView_Database.Click("47;17", 125);
			Delay.Milliseconds(0);
			
			Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='ATO DB') on item 'FormATO_Database___C2_HOST.TreeItemATO_DB'.", repo.FormATO_Database___C2_HOST.TreeItemATO_DBInfo, new RecordItemIndex(3));
			Validate.Attribute(repo.FormATO_Database___C2_HOST.TreeItemATO_DBInfo, "Text", "ATO DB");
			Delay.Milliseconds(120);
			
			try {
				Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='ATOSmall1.txt\tTBONE\t\t') on item 'FormATO_Database___C2_HOST.TreeItemATOSmall1_txt_TBONE'.", repo.FormATO_Database___C2_HOST.TreeItemATOSmall1_txt_TBONEInfo, new RecordItemIndex(4));
				Validate.Attribute(repo.FormATO_Database___C2_HOST.TreeItemATOSmall1_txt_TBONEInfo, "Text", "ATOSmall1.txt\tTBONE\t\t", Validate.DefaultMessage, false);
				Delay.Milliseconds(120);
			} catch(Exception) { }
			
			Delay.Duration(500, false);
			
			Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormATO_Database___C2_HOST.ButtonCLOSE' at 12;8.", repo.FormATO_Database___C2_HOST.ButtonCLOSEInfo, new RecordItemIndex(6));
			repo.FormATO_Database___C2_HOST.ButtonCLOSE.Click("12;8", 300);
			Delay.Milliseconds(700);
			
		}

#region Image Feature Data
#endregion
	}
}
