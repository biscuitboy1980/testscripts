///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;

namespace TacViewLib.Defects.D04457
{
	/// <summary>
	/// The Recording1 recording.
	/// </summary>
	public partial class D04457Validate
	{
		//Values from creation
		public static string TF1;
		public static string HR1;
		public static string MN1;
		public static string TF2;
		public static string HR2;
		public static string MN2;
		public static string TrackNum;
		
		//Flags for processing
		public static bool TF1Flag;
		public static bool TF2Flag;	
		
		//Out of Range Flags
		public static bool TF1_OOR;
		public static bool TF2_OOR;
				
		public static bool ZoomFlag = false;
		
		
		//************************************************************************************//
		//***************************Validates Track is Dropped*******************************//
		//************************************************************************************//			
		
		public void SetTrackNumberInRepo()
		{
			TrackNumber = TrackNum;
		}
		
		public void Validate_PictureTrack()
		{
			
			Report.Info("Validating Exists on item 'FormTacViewC2.PictureTrack'.");
			Validate.Exists(repo.FormTacViewC2.PictureTrackInfo, Validate.DefaultMessage, false);
		}
		
		//************************************************************************************//
		//********************************Right Clicks on Track*******************************//
		//************************************************************************************//		
		
		public void RightClickTrack()
		{			
			Report.Info("Mouse Right Click item 'FormTacViewC2.PictureTrack' at Center.");
			repo.FormTacViewC2.PictureTrack.Click(MouseButtons.Right);
		}		
		
		//************************************************************************************//
		//****************************Drops Corresponding Track*******************************//
		//************************************************************************************//
		
		public void DropTrack()
		{			
			Drop_Track.DropTrack.Start();
		}		
		
		//************************************************************************************//
		//***************************Validates Track is Dropped*******************************//
		//************************************************************************************//		

		public void Validate_DropTrack()
		{			
			Report.Info("Validating Track # " + TrackNum + " was dropped");
	
			bool result = Validate.NotExists(repo.FormTacViewC2.PictureTrackInfo.AbsolutePath, 10000, Validate.DefaultMessage, false);
			
			if (result == true)
			{
				Report.Success("Successfully dropped track # " + TrackNum);
			}
			else
			{
				Report.Screenshot();
				Report.Debug("Track # " + TrackNum + " failed to drop within 15 seconds, proceeding to next track creation.");
			}
		}
		
		//************************************************************************************//
		//*******************************Enter Track Number***********************************//
		//************************************************************************************//		
		
		public void EnterTrack()
		{		
			Report.Info("Key sequence 'TrackNum'.");
			Keyboard.Press(TrackNum);
		}
		
		//************************************************************************************//
		//************************Resets Paths Created at Run-Time****************************//
		//************************************************************************************//
		
		public void ResetPaths()
		{
			string currentPath = repo.FormTacViewC2.PictureTrackInfo.Path.ToString();
			repo.FormTacViewC2.PictureTrackInfo.Path = currentPath.Replace(TrackNum, "%track%");
			Report.Info("Resetting repo item FormTacViewC2.PictureTrack repo item to" + repo.FormTacViewC2.PictureTrackInfo.Path.ToString());
		
			string currentPath1 = repo.FormTracks.MenuItemC2_HOST_2_TrackInfo.Path.ToString();
			repo.FormTracks.MenuItemC2_HOST_2_TrackInfo.Path = currentPath1.Replace(TrackNum, "%track%");
			Report.Info("Resetting repo item FormTracks.MenuItemC2_HOST_2_Track to " + repo.FormTracks.MenuItemC2_HOST_2_TrackInfo.Path.ToString());
			
			string currentPath2 = repo.FormRealView.MenuItemTrackNumber2Info.Path.ToString();
			repo.FormRealView.MenuItemTrackNumber2Info.Path = currentPath2.Replace(TrackNum, "%track%");
			Report.Info("Resetting repo item FormRealView.MenuItemTrackNumber2 to " + repo.FormRealView.MenuItemTrackNumber2Info.Path.ToString());
			
			string currentPath3 = repo.FormRealView.MenuItemTrackNumberInfo.Path.ToString();
			repo.FormRealView.MenuItemTrackNumberInfo.Path = currentPath3.Replace(TrackNum, "%track%");
			Report.Info("Resetting repo item FormRealView.MenuItemTrackNumber to " + repo.FormRealView.MenuItemTrackNumberInfo.Path.ToString());
			
			string currentPath4 = repo.FormTracks.MenuItemC2_HOST_TrackInfo.Path.ToString();
			repo.FormTracks.MenuItemC2_HOST_TrackInfo.Path = currentPath4.Replace(TrackNum, "%track%");
			Report.Info("Resetting repo item FormTracks.MenuItemC2_HOST_Track to " + repo.FormTracks.MenuItemC2_HOST_TrackInfo.Path.ToString());		
		}

		static D04457Validate()
		{
			//Your recording specific initialization code goes here.
		}

		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void CreateTrackRepoItems()
		{
			// Your code goes here. Code inside this method will not be changed by the code generator.
			
		}
	}
}
