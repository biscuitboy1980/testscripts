///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace TacViewLib.Defects.D01709
{
    /// <summary>
    /// The D01709Validate recording.
    /// </summary>
    [TestModule("d7512d32-d7ba-4196-b008-7148b23483f0", ModuleType.Recording, 1)]
    public partial class D01709Validate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TacViewLib.TacViewSustainment_DefectsRepository repository.
        /// </summary>
        public static TacViewLib.TacViewSustainment_DefectsRepository repo = TacViewLib.TacViewSustainment_DefectsRepository.Instance;

        static D01709Validate instance = new D01709Validate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public D01709Validate()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static D01709Validate Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "3.1.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 250;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1000ms.", new RecordItemIndex(0));
            Delay.Duration(1000, false);
            
            CreateTrackRepoItems();
            Delay.Milliseconds(200);
            
            RightClickTrack();
            Delay.Milliseconds(200);
            
            ViewTrackProperties();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(4));
            Delay.Duration(500, false);
            
            Validate_ListItemTrack_3_4_5_4_Indicator();
            Delay.Milliseconds(200);
            
            ValidateID();
            Delay.Milliseconds(200);
            
            ValidatePlat();
            Delay.Milliseconds(200);
            
            ValidateAct();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormMain__SubSurface_Prop.ButtonCLOSE' at Center.", repo.FormMain__SubSurface_Prop.ButtonCLOSEInfo, new RecordItemIndex(9));
            repo.FormMain__SubSurface_Prop.ButtonCLOSE.Click();
            Delay.Milliseconds(0);
            
            RightClickTrack();
            Delay.Milliseconds(0);
            
            DropTrack();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2000ms.", new RecordItemIndex(12));
            Delay.Duration(2000, false);
            
            Validate_DropTrack();
            Delay.Milliseconds(200);
            
            ResetPaths();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
}
