///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

using Ranorex;
using Ranorex.Core;

namespace TacViewLib.Defects.D04482
{
	/// <summary>
	/// The D04482Create recording.
	/// </summary>
	public partial class D04482Create
	{	
		public static string TrackType;
		public static int Strength; 
		public static int x = 0;
		public static int TCount;
		
		//************************************************************************************//
		//**********************Sets List Values Based on Loop Value***************************//
		//************************************************************************************//
		
		public void GetListValues()
		{			
			switch (x)
            {
            	case 0:
                    TrackType = "Air";
                    Strength = 14;
                    D04482Validate.TrackType = "Air";
                    break;
                case 1:
                    TrackType = "Air";
                    Strength = 15;
                    D04482Validate.TrackType = "Air";
                    break;
                case 2:
					TrackType = "Surface";
                    Strength = 14;
                    D04482Validate.TrackType = "Surface";
                    break;
                case 3:
                    TrackType = "Surface";
                    Strength = 15;
                    D04482Validate.TrackType = "Surface";
                    break;
                case 4:
                    TrackType = "Land Point/Track";
                    Strength = 14;
                    D04482Validate.TrackType = "Land Point";
                    break;
                case 5:
                    TrackType = "Land Point/Track";
                    Strength = 15;
                    D04482Validate.TrackType = "Land Point";
                    break;                    
           }
		}

		
		//************************************************************************************//
		//*********************************Gets Track Count***********************************//
		//************************************************************************************//
		
		public void GetTrackCount()
		{			
			Ranorex.Container cont1 = repo.FormTacViewC2.ContainerRvView;
			IList<Picture> list1 = cont1.Find<Picture>(@"/form[@title~'^TacViewC2\ \ \ \(map:\ .*']/element/container/picture[@accessiblevalue='Track']");
			TCount = list1.Count;		  
		}
		
		//************************************************************************************//
		//******************************Randomly Plots a Track********************************//
		//************************************************************************************//		

		public void RandCoord()
		{	
			CommonUtilLib.Util SharedFunctions = new CommonUtilLib.Util();
			
			SharedFunctions.RandCoord();
		}
		
		//************************************************************************************//
		//*******************************Track type selector**********************************//
		//************************************************************************************//
		
		public void TrackTypeval()
		{						
			repo.FormRealView.MenuItemCreate_Track.Click("CenterLeft");
			repo.FormCreate_Track.MenuItemC2_HOST.Click("CenterLeft");
			Ranorex.MenuItem type = @"/form[@title~'^C2 HOST.*']/contextmenu[1]/menuitem[@accessiblename='" + TrackType + "']";
			type.Click("CenterLeft");
			Report.Info("Track Type Selected = " + TrackType);
			  		
		}

		//************************************************************************************//
		//********************************Strength Value**************************************//
		//************************************************************************************//
		
		public void Strengthval()
		{
			int x = 0;
				
			while (x < 2)
			{	
				try
				{
					repo.FormMain.ListItemStrength.Click("CenterLeft");
					Keyboard.Press(Keys.Tab);
					Keyboard.Press("{LMenu down}{Down}{LMenu up}");
					Ranorex.List list1 = "/list[@processname='RealView']";
			    	repo.ListRealView.Self.Items[Strength].Select();
			      	repo.ListRealView.Self.Items[Strength].Click("center");
			      	Accessible accElement1 = new Accessible(repo.FormMain.ListItemStrength);  
			  		string StrengthValue = accElement1.Value;
			  		D04482.D04482Validate.StrengthValue = StrengthValue;
			  		Report.Info("Strength Value Entered = " + StrengthValue);
			  		D04482.D04482Validate.Strength_OOR = false;
			  		x=2;
				}
				catch (ArgumentOutOfRangeException e)
				{								   			
					x++;
					if (x == 1)
					{
					   	Report.Debug("List Count Out of Range for Strength Value, Re-Executing Function");
					   	Report.Debug(e.ToString());	
					}
					else if (x == 2)
					{
					   	Report.Debug("List Count Out of Range for Strength Value, List Item Will Not be Validated");
					   	Report.Debug(e.ToString());	
					   	D04482.D04482Validate.Strength_OOR = true;
					}
				}					
			}
		}
		
		//************************************************************************************//
		//*********************************Gets Track Number**********************************//
		//************************************************************************************//
	
		public void GetTrackNum()
		{			
		    TCount++;
		    Accessible pic1 = @"/form[@title~'^TacViewC2\ \ \ \(map:\ .*']/element/container/picture[@accessiblevalue='Track']" + "[" + TCount + "]";
   			Accessible accElement = new Accessible(pic1);  
   			string track1 = accElement.Name;
   			Report.Info("Track Number = " + track1);
   			TacViewLib.Defects.D04482.D04482Validate.TrackNum = track1;		
   			TacViewLib.Defects.Drop_Track.DropTrack.TrackNum = track1;
		}

		private void Init()
		{
			// Your recording specific initialization code goes here.
		}
	}
}
